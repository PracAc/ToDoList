{
  "version": 3,
  "sources": ["../../../../@fullcalendar/core/index.js"],
  "sourcesContent": ["import { m as mergeProps, g as guid, i as isArraysEqual, T as Theme, a as mapHash, B as BaseComponent, V as ViewContextType, C as ContentContainer, b as buildViewClassNames, c as greatestDurationDenominator, d as createDuration, e as BASE_OPTION_DEFAULTS, f as arrayToHash, h as filterHash, j as buildEventSourceRefiners, p as parseEventSource, k as formatWithOrdinals, u as unpromisify, l as buildRangeApiWithTimeZone, n as identity, r as requestJson, s as subtractDurations, o as intersectRanges, q as startOfDay, t as addDays, v as hashValuesToArray, w as buildEventApis, D as DelayedRunner, x as createFormatter, y as diffWholeDays, z as memoize, A as memoizeObjArg, E as isPropsEqual, F as Emitter, G as getInitialDate, H as rangeContainsMarker, I as createEmptyEventStore, J as reduceCurrentDate, K as reduceEventStore, L as rezoneEventStoreDates, M as mergeRawOptions, N as BASE_OPTION_REFINERS, O as CALENDAR_LISTENER_REFINERS, P as CALENDAR_OPTION_REFINERS, Q as COMPLEX_OPTION_COMPARATORS, R as VIEW_OPTION_REFINERS, S as DateEnv, U as DateProfileGenerator, W as createEventUi, X as parseBusinessHours, Y as setRef, Z as Interaction, _ as getElSeg, $ as elementClosest, a0 as EventImpl, a1 as listenBySelector, a2 as listenToHoverBySelector, a3 as PureComponent, a4 as buildViewContext, a5 as getUniqueDomId, a6 as parseInteractionSettings, a7 as interactionSettingsStore, a8 as getNow, a9 as CalendarImpl, aa as flushSync, ab as CalendarRoot, ac as RenderId, ad as ensureElHasStyles, ae as applyStyleProp, af as sliceEventStore } from './internal-common.js';\r\nexport { ag as JsonRequestError } from './internal-common.js';\r\nimport { createElement, createRef, Fragment, render } from 'preact';\r\nimport 'preact/compat';\r\n\r\nconst globalLocales = [];\r\n\r\nconst MINIMAL_RAW_EN_LOCALE = {\r\n    code: 'en',\r\n    week: {\r\n        dow: 0,\r\n        doy: 4, // 4 days need to be within the year to be considered the first week\r\n    },\r\n    direction: 'ltr',\r\n    buttonText: {\r\n        prev: 'prev',\r\n        next: 'next',\r\n        prevYear: 'prev year',\r\n        nextYear: 'next year',\r\n        year: 'year',\r\n        today: 'today',\r\n        month: 'month',\r\n        week: 'week',\r\n        day: 'day',\r\n        list: 'list',\r\n    },\r\n    weekText: 'W',\r\n    weekTextLong: 'Week',\r\n    closeHint: 'Close',\r\n    timeHint: 'Time',\r\n    eventHint: 'Event',\r\n    allDayText: 'all-day',\r\n    moreLinkText: 'more',\r\n    noEventsText: 'No events to display',\r\n};\r\nconst RAW_EN_LOCALE = Object.assign(Object.assign({}, MINIMAL_RAW_EN_LOCALE), { \r\n    // Includes things we don't want other locales to inherit,\r\n    // things that derive from other translatable strings.\r\n    buttonHints: {\r\n        prev: 'Previous $0',\r\n        next: 'Next $0',\r\n        today(buttonText, unit) {\r\n            return (unit === 'day')\r\n                ? 'Today'\r\n                : `This ${buttonText}`;\r\n        },\r\n    }, viewHint: '$0 view', navLinkHint: 'Go to $0', moreLinkHint(eventCnt) {\r\n        return `Show ${eventCnt} more event${eventCnt === 1 ? '' : 's'}`;\r\n    } });\r\nfunction organizeRawLocales(explicitRawLocales) {\r\n    let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';\r\n    let allRawLocales = globalLocales.concat(explicitRawLocales);\r\n    let rawLocaleMap = {\r\n        en: RAW_EN_LOCALE,\r\n    };\r\n    for (let rawLocale of allRawLocales) {\r\n        rawLocaleMap[rawLocale.code] = rawLocale;\r\n    }\r\n    return {\r\n        map: rawLocaleMap,\r\n        defaultCode,\r\n    };\r\n}\r\nfunction buildLocale(inputSingular, available) {\r\n    if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {\r\n        return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);\r\n    }\r\n    return queryLocale(inputSingular, available);\r\n}\r\nfunction queryLocale(codeArg, available) {\r\n    let codes = [].concat(codeArg || []); // will convert to array\r\n    let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;\r\n    return parseLocale(codeArg, codes, raw);\r\n}\r\nfunction queryRawLocale(codes, available) {\r\n    for (let i = 0; i < codes.length; i += 1) {\r\n        let parts = codes[i].toLocaleLowerCase().split('-');\r\n        for (let j = parts.length; j > 0; j -= 1) {\r\n            let simpleId = parts.slice(0, j).join('-');\r\n            if (available[simpleId]) {\r\n                return available[simpleId];\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction parseLocale(codeArg, codes, raw) {\r\n    let merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText']);\r\n    delete merged.code; // don't want this part of the options\r\n    let { week } = merged;\r\n    delete merged.week;\r\n    return {\r\n        codeArg,\r\n        codes,\r\n        week,\r\n        simpleNumberFormat: new Intl.NumberFormat(codeArg),\r\n        options: merged,\r\n    };\r\n}\r\n\r\n// TODO: easier way to add new hooks? need to update a million things\r\nfunction createPlugin(input) {\r\n    return {\r\n        id: guid(),\r\n        name: input.name,\r\n        premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : undefined,\r\n        deps: input.deps || [],\r\n        reducers: input.reducers || [],\r\n        isLoadingFuncs: input.isLoadingFuncs || [],\r\n        contextInit: [].concat(input.contextInit || []),\r\n        eventRefiners: input.eventRefiners || {},\r\n        eventDefMemberAdders: input.eventDefMemberAdders || [],\r\n        eventSourceRefiners: input.eventSourceRefiners || {},\r\n        isDraggableTransformers: input.isDraggableTransformers || [],\r\n        eventDragMutationMassagers: input.eventDragMutationMassagers || [],\r\n        eventDefMutationAppliers: input.eventDefMutationAppliers || [],\r\n        dateSelectionTransformers: input.dateSelectionTransformers || [],\r\n        datePointTransforms: input.datePointTransforms || [],\r\n        dateSpanTransforms: input.dateSpanTransforms || [],\r\n        views: input.views || {},\r\n        viewPropsTransformers: input.viewPropsTransformers || [],\r\n        isPropsValid: input.isPropsValid || null,\r\n        externalDefTransforms: input.externalDefTransforms || [],\r\n        viewContainerAppends: input.viewContainerAppends || [],\r\n        eventDropTransformers: input.eventDropTransformers || [],\r\n        componentInteractions: input.componentInteractions || [],\r\n        calendarInteractions: input.calendarInteractions || [],\r\n        themeClasses: input.themeClasses || {},\r\n        eventSourceDefs: input.eventSourceDefs || [],\r\n        cmdFormatter: input.cmdFormatter,\r\n        recurringTypes: input.recurringTypes || [],\r\n        namedTimeZonedImpl: input.namedTimeZonedImpl,\r\n        initialView: input.initialView || '',\r\n        elementDraggingImpl: input.elementDraggingImpl,\r\n        optionChangeHandlers: input.optionChangeHandlers || {},\r\n        scrollGridImpl: input.scrollGridImpl || null,\r\n        listenerRefiners: input.listenerRefiners || {},\r\n        optionRefiners: input.optionRefiners || {},\r\n        propSetHandlers: input.propSetHandlers || {},\r\n    };\r\n}\r\nfunction buildPluginHooks(pluginDefs, globalDefs) {\r\n    let currentPluginIds = {};\r\n    let hooks = {\r\n        premiumReleaseDate: undefined,\r\n        reducers: [],\r\n        isLoadingFuncs: [],\r\n        contextInit: [],\r\n        eventRefiners: {},\r\n        eventDefMemberAdders: [],\r\n        eventSourceRefiners: {},\r\n        isDraggableTransformers: [],\r\n        eventDragMutationMassagers: [],\r\n        eventDefMutationAppliers: [],\r\n        dateSelectionTransformers: [],\r\n        datePointTransforms: [],\r\n        dateSpanTransforms: [],\r\n        views: {},\r\n        viewPropsTransformers: [],\r\n        isPropsValid: null,\r\n        externalDefTransforms: [],\r\n        viewContainerAppends: [],\r\n        eventDropTransformers: [],\r\n        componentInteractions: [],\r\n        calendarInteractions: [],\r\n        themeClasses: {},\r\n        eventSourceDefs: [],\r\n        cmdFormatter: null,\r\n        recurringTypes: [],\r\n        namedTimeZonedImpl: null,\r\n        initialView: '',\r\n        elementDraggingImpl: null,\r\n        optionChangeHandlers: {},\r\n        scrollGridImpl: null,\r\n        listenerRefiners: {},\r\n        optionRefiners: {},\r\n        propSetHandlers: {},\r\n    };\r\n    function addDefs(defs) {\r\n        for (let def of defs) {\r\n            const pluginName = def.name;\r\n            const currentId = currentPluginIds[pluginName];\r\n            if (currentId === undefined) {\r\n                currentPluginIds[pluginName] = def.id;\r\n                addDefs(def.deps);\r\n                hooks = combineHooks(hooks, def);\r\n            }\r\n            else if (currentId !== def.id) {\r\n                // different ID than the one already added\r\n                console.warn(`Duplicate plugin '${pluginName}'`);\r\n            }\r\n        }\r\n    }\r\n    if (pluginDefs) {\r\n        addDefs(pluginDefs);\r\n    }\r\n    addDefs(globalDefs);\r\n    return hooks;\r\n}\r\nfunction buildBuildPluginHooks() {\r\n    let currentOverrideDefs = [];\r\n    let currentGlobalDefs = [];\r\n    let currentHooks;\r\n    return (overrideDefs, globalDefs) => {\r\n        if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {\r\n            currentHooks = buildPluginHooks(overrideDefs, globalDefs);\r\n        }\r\n        currentOverrideDefs = overrideDefs;\r\n        currentGlobalDefs = globalDefs;\r\n        return currentHooks;\r\n    };\r\n}\r\nfunction combineHooks(hooks0, hooks1) {\r\n    return {\r\n        premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),\r\n        reducers: hooks0.reducers.concat(hooks1.reducers),\r\n        isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),\r\n        contextInit: hooks0.contextInit.concat(hooks1.contextInit),\r\n        eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),\r\n        eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),\r\n        eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),\r\n        isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),\r\n        eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\r\n        eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\r\n        dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\r\n        datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\r\n        dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\r\n        views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),\r\n        viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\r\n        isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\r\n        externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\r\n        viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),\r\n        eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\r\n        calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\r\n        componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\r\n        themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),\r\n        eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\r\n        cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\r\n        recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\r\n        namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\r\n        initialView: hooks0.initialView || hooks1.initialView,\r\n        elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,\r\n        optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),\r\n        scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,\r\n        listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),\r\n        optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),\r\n        propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers),\r\n    };\r\n}\r\nfunction compareOptionalDates(date0, date1) {\r\n    if (date0 === undefined) {\r\n        return date1;\r\n    }\r\n    if (date1 === undefined) {\r\n        return date0;\r\n    }\r\n    return new Date(Math.max(date0.valueOf(), date1.valueOf()));\r\n}\r\n\r\nclass StandardTheme extends Theme {\r\n}\r\nStandardTheme.prototype.classes = {\r\n    root: 'fc-theme-standard',\r\n    tableCellShaded: 'fc-cell-shaded',\r\n    buttonGroup: 'fc-button-group',\r\n    button: 'fc-button fc-button-primary',\r\n    buttonActive: 'fc-button-active',\r\n};\r\nStandardTheme.prototype.baseIconClass = 'fc-icon';\r\nStandardTheme.prototype.iconClasses = {\r\n    close: 'fc-icon-x',\r\n    prev: 'fc-icon-chevron-left',\r\n    next: 'fc-icon-chevron-right',\r\n    prevYear: 'fc-icon-chevrons-left',\r\n    nextYear: 'fc-icon-chevrons-right',\r\n};\r\nStandardTheme.prototype.rtlIconClasses = {\r\n    prev: 'fc-icon-chevron-right',\r\n    next: 'fc-icon-chevron-left',\r\n    prevYear: 'fc-icon-chevrons-right',\r\n    nextYear: 'fc-icon-chevrons-left',\r\n};\r\nStandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly\r\nStandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';\r\nStandardTheme.prototype.iconOverridePrefix = 'fc-icon-';\r\n\r\nfunction compileViewDefs(defaultConfigs, overrideConfigs) {\r\n    let hash = {};\r\n    let viewType;\r\n    for (viewType in defaultConfigs) {\r\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\r\n    }\r\n    for (viewType in overrideConfigs) {\r\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\r\n    }\r\n    return hash;\r\n}\r\nfunction ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\r\n    if (hash[viewType]) {\r\n        return hash[viewType];\r\n    }\r\n    let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);\r\n    if (viewDef) {\r\n        hash[viewType] = viewDef;\r\n    }\r\n    return viewDef;\r\n}\r\nfunction buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\r\n    let defaultConfig = defaultConfigs[viewType];\r\n    let overrideConfig = overrideConfigs[viewType];\r\n    let queryProp = (name) => ((defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :\r\n        ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null));\r\n    let theComponent = queryProp('component');\r\n    let superType = queryProp('superType');\r\n    let superDef = null;\r\n    if (superType) {\r\n        if (superType === viewType) {\r\n            throw new Error('Can\\'t have a custom view type that references itself');\r\n        }\r\n        superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);\r\n    }\r\n    if (!theComponent && superDef) {\r\n        theComponent = superDef.component;\r\n    }\r\n    if (!theComponent) {\r\n        return null; // don't throw a warning, might be settings for a single-unit view\r\n    }\r\n    return {\r\n        type: viewType,\r\n        component: theComponent,\r\n        defaults: Object.assign(Object.assign({}, (superDef ? superDef.defaults : {})), (defaultConfig ? defaultConfig.rawOptions : {})),\r\n        overrides: Object.assign(Object.assign({}, (superDef ? superDef.overrides : {})), (overrideConfig ? overrideConfig.rawOptions : {})),\r\n    };\r\n}\r\n\r\nfunction parseViewConfigs(inputs) {\r\n    return mapHash(inputs, parseViewConfig);\r\n}\r\nfunction parseViewConfig(input) {\r\n    let rawOptions = typeof input === 'function' ?\r\n        { component: input } :\r\n        input;\r\n    let { component } = rawOptions;\r\n    if (rawOptions.content) {\r\n        // TODO: remove content/classNames/didMount/etc from options?\r\n        component = createViewHookComponent(rawOptions);\r\n    }\r\n    else if (component && !(component.prototype instanceof BaseComponent)) {\r\n        // WHY?: people were using `component` property for `content`\r\n        // TODO: converge on one setting name\r\n        component = createViewHookComponent(Object.assign(Object.assign({}, rawOptions), { content: component }));\r\n    }\r\n    return {\r\n        superType: rawOptions.type,\r\n        component: component,\r\n        rawOptions, // includes type and component too :(\r\n    };\r\n}\r\nfunction createViewHookComponent(options) {\r\n    return (viewProps) => (createElement(ViewContextType.Consumer, null, (context) => (createElement(ContentContainer, { elTag: \"div\", elClasses: buildViewClassNames(context.viewSpec), renderProps: Object.assign(Object.assign({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold }), generatorName: undefined, customGenerator: options.content, classNameGenerator: options.classNames, didMount: options.didMount, willUnmount: options.willUnmount }))));\r\n}\r\n\r\nfunction buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\r\n    let defaultConfigs = parseViewConfigs(defaultInputs);\r\n    let overrideConfigs = parseViewConfigs(optionOverrides.views);\r\n    let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);\r\n    return mapHash(viewDefs, (viewDef) => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults));\r\n}\r\nfunction buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\r\n    let durationInput = viewDef.overrides.duration ||\r\n        viewDef.defaults.duration ||\r\n        dynamicOptionOverrides.duration ||\r\n        optionOverrides.duration;\r\n    let duration = null;\r\n    let durationUnit = '';\r\n    let singleUnit = '';\r\n    let singleUnitOverrides = {};\r\n    if (durationInput) {\r\n        duration = createDurationCached(durationInput);\r\n        if (duration) { // valid?\r\n            let denom = greatestDurationDenominator(duration);\r\n            durationUnit = denom.unit;\r\n            if (denom.value === 1) {\r\n                singleUnit = durationUnit;\r\n                singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};\r\n            }\r\n        }\r\n    }\r\n    let queryButtonText = (optionsSubset) => {\r\n        let buttonTextMap = optionsSubset.buttonText || {};\r\n        let buttonTextKey = viewDef.defaults.buttonTextKey;\r\n        if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {\r\n            return buttonTextMap[buttonTextKey];\r\n        }\r\n        if (buttonTextMap[viewDef.type] != null) {\r\n            return buttonTextMap[viewDef.type];\r\n        }\r\n        if (buttonTextMap[singleUnit] != null) {\r\n            return buttonTextMap[singleUnit];\r\n        }\r\n        return null;\r\n    };\r\n    let queryButtonTitle = (optionsSubset) => {\r\n        let buttonHints = optionsSubset.buttonHints || {};\r\n        let buttonKey = viewDef.defaults.buttonTextKey; // use same key as text\r\n        if (buttonKey != null && buttonHints[buttonKey] != null) {\r\n            return buttonHints[buttonKey];\r\n        }\r\n        if (buttonHints[viewDef.type] != null) {\r\n            return buttonHints[viewDef.type];\r\n        }\r\n        if (buttonHints[singleUnit] != null) {\r\n            return buttonHints[singleUnit];\r\n        }\r\n        return null;\r\n    };\r\n    return {\r\n        type: viewDef.type,\r\n        component: viewDef.component,\r\n        duration,\r\n        durationUnit,\r\n        singleUnit,\r\n        optionDefaults: viewDef.defaults,\r\n        optionOverrides: Object.assign(Object.assign({}, singleUnitOverrides), viewDef.overrides),\r\n        buttonTextOverride: queryButtonText(dynamicOptionOverrides) ||\r\n            queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence\r\n            viewDef.overrides.buttonText,\r\n        buttonTextDefault: queryButtonText(localeDefaults) ||\r\n            viewDef.defaults.buttonText ||\r\n            queryButtonText(BASE_OPTION_DEFAULTS) ||\r\n            viewDef.type,\r\n        // not DRY\r\n        buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) ||\r\n            queryButtonTitle(optionOverrides) ||\r\n            viewDef.overrides.buttonHint,\r\n        buttonTitleDefault: queryButtonTitle(localeDefaults) ||\r\n            viewDef.defaults.buttonHint ||\r\n            queryButtonTitle(BASE_OPTION_DEFAULTS),\r\n        // will eventually fall back to buttonText\r\n    };\r\n}\r\n// hack to get memoization working\r\nlet durationInputMap = {};\r\nfunction createDurationCached(durationInput) {\r\n    let json = JSON.stringify(durationInput);\r\n    let res = durationInputMap[json];\r\n    if (res === undefined) {\r\n        res = createDuration(durationInput);\r\n        durationInputMap[json] = res;\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction reduceViewType(viewType, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_VIEW_TYPE':\r\n            viewType = action.viewType;\r\n    }\r\n    return viewType;\r\n}\r\n\r\nfunction reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {\r\n    switch (action.type) {\r\n        case 'SET_OPTION':\r\n            return Object.assign(Object.assign({}, dynamicOptionOverrides), { [action.optionName]: action.rawOptionValue });\r\n        default:\r\n            return dynamicOptionOverrides;\r\n    }\r\n}\r\n\r\nfunction reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {\r\n    let dp;\r\n    switch (action.type) {\r\n        case 'CHANGE_VIEW_TYPE':\r\n            return dateProfileGenerator.build(action.dateMarker || currentDate);\r\n        case 'CHANGE_DATE':\r\n            return dateProfileGenerator.build(action.dateMarker);\r\n        case 'PREV':\r\n            dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);\r\n            if (dp.isValid) {\r\n                return dp;\r\n            }\r\n            break;\r\n        case 'NEXT':\r\n            dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);\r\n            if (dp.isValid) {\r\n                return dp;\r\n            }\r\n            break;\r\n    }\r\n    return currentDateProfile;\r\n}\r\n\r\nfunction initEventSources(calendarOptions, dateProfile, context) {\r\n    let activeRange = dateProfile ? dateProfile.activeRange : null;\r\n    return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);\r\n}\r\nfunction reduceEventSources(eventSources, action, dateProfile, context) {\r\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\r\n    switch (action.type) {\r\n        case 'ADD_EVENT_SOURCES': // already parsed\r\n            return addSources(eventSources, action.sources, activeRange, context);\r\n        case 'REMOVE_EVENT_SOURCE':\r\n            return removeSource(eventSources, action.sourceId);\r\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\r\n        case 'NEXT':\r\n        case 'CHANGE_DATE':\r\n        case 'CHANGE_VIEW_TYPE':\r\n            if (dateProfile) {\r\n                return fetchDirtySources(eventSources, activeRange, context);\r\n            }\r\n            return eventSources;\r\n        case 'FETCH_EVENT_SOURCES':\r\n            return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?\r\n                arrayToHash(action.sourceIds) :\r\n                excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);\r\n        case 'RECEIVE_EVENTS':\r\n        case 'RECEIVE_EVENT_ERROR':\r\n            return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);\r\n        case 'REMOVE_ALL_EVENT_SOURCES':\r\n            return {};\r\n        default:\r\n            return eventSources;\r\n    }\r\n}\r\nfunction reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {\r\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\r\n    return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);\r\n}\r\nfunction computeEventSourcesLoading(eventSources) {\r\n    for (let sourceId in eventSources) {\r\n        if (eventSources[sourceId].isFetching) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction addSources(eventSourceHash, sources, fetchRange, context) {\r\n    let hash = {};\r\n    for (let source of sources) {\r\n        hash[source.sourceId] = source;\r\n    }\r\n    if (fetchRange) {\r\n        hash = fetchDirtySources(hash, fetchRange, context);\r\n    }\r\n    return Object.assign(Object.assign({}, eventSourceHash), hash);\r\n}\r\nfunction removeSource(eventSourceHash, sourceId) {\r\n    return filterHash(eventSourceHash, (eventSource) => eventSource.sourceId !== sourceId);\r\n}\r\nfunction fetchDirtySources(sourceHash, fetchRange, context) {\r\n    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);\r\n}\r\nfunction isSourceDirty(eventSource, fetchRange, context) {\r\n    if (!doesSourceNeedRange(eventSource, context)) {\r\n        return !eventSource.latestFetchId;\r\n    }\r\n    return !context.options.lazyFetching ||\r\n        !eventSource.fetchRange ||\r\n        eventSource.isFetching || // always cancel outdated in-progress fetches\r\n        fetchRange.start < eventSource.fetchRange.start ||\r\n        fetchRange.end > eventSource.fetchRange.end;\r\n}\r\nfunction fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {\r\n    let nextSources = {};\r\n    for (let sourceId in prevSources) {\r\n        let source = prevSources[sourceId];\r\n        if (sourceIdHash[sourceId]) {\r\n            nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);\r\n        }\r\n        else {\r\n            nextSources[sourceId] = source;\r\n        }\r\n    }\r\n    return nextSources;\r\n}\r\nfunction fetchSource(eventSource, fetchRange, isRefetch, context) {\r\n    let { options, calendarApi } = context;\r\n    let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];\r\n    let fetchId = guid();\r\n    sourceDef.fetch({\r\n        eventSource,\r\n        range: fetchRange,\r\n        isRefetch,\r\n        context,\r\n    }, (res) => {\r\n        let { rawEvents } = res;\r\n        if (options.eventSourceSuccess) {\r\n            rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;\r\n        }\r\n        if (eventSource.success) {\r\n            rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;\r\n        }\r\n        context.dispatch({\r\n            type: 'RECEIVE_EVENTS',\r\n            sourceId: eventSource.sourceId,\r\n            fetchId,\r\n            fetchRange,\r\n            rawEvents,\r\n        });\r\n    }, (error) => {\r\n        let errorHandled = false;\r\n        if (options.eventSourceFailure) {\r\n            options.eventSourceFailure.call(calendarApi, error);\r\n            errorHandled = true;\r\n        }\r\n        if (eventSource.failure) {\r\n            eventSource.failure(error);\r\n            errorHandled = true;\r\n        }\r\n        if (!errorHandled) {\r\n            console.warn(error.message, error);\r\n        }\r\n        context.dispatch({\r\n            type: 'RECEIVE_EVENT_ERROR',\r\n            sourceId: eventSource.sourceId,\r\n            fetchId,\r\n            fetchRange,\r\n            error,\r\n        });\r\n    });\r\n    return Object.assign(Object.assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });\r\n}\r\nfunction receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {\r\n    let eventSource = sourceHash[sourceId];\r\n    if (eventSource && // not already removed\r\n        fetchId === eventSource.latestFetchId) {\r\n        return Object.assign(Object.assign({}, sourceHash), { [sourceId]: Object.assign(Object.assign({}, eventSource), { isFetching: false, fetchRange }) });\r\n    }\r\n    return sourceHash;\r\n}\r\nfunction excludeStaticSources(eventSources, context) {\r\n    return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context));\r\n}\r\nfunction parseInitialSources(rawOptions, context) {\r\n    let refiners = buildEventSourceRefiners(context);\r\n    let rawSources = [].concat(rawOptions.eventSources || []);\r\n    let sources = []; // parsed\r\n    if (rawOptions.initialEvents) {\r\n        rawSources.unshift(rawOptions.initialEvents);\r\n    }\r\n    if (rawOptions.events) {\r\n        rawSources.unshift(rawOptions.events);\r\n    }\r\n    for (let rawSource of rawSources) {\r\n        let source = parseEventSource(rawSource, context, refiners);\r\n        if (source) {\r\n            sources.push(source);\r\n        }\r\n    }\r\n    return sources;\r\n}\r\nfunction doesSourceNeedRange(eventSource, context) {\r\n    let defs = context.pluginHooks.eventSourceDefs;\r\n    return !defs[eventSource.sourceDefId].ignoreRange;\r\n}\r\n\r\nfunction reduceDateSelection(currentSelection, action) {\r\n    switch (action.type) {\r\n        case 'UNSELECT_DATES':\r\n            return null;\r\n        case 'SELECT_DATES':\r\n            return action.selection;\r\n        default:\r\n            return currentSelection;\r\n    }\r\n}\r\n\r\nfunction reduceSelectedEvent(currentInstanceId, action) {\r\n    switch (action.type) {\r\n        case 'UNSELECT_EVENT':\r\n            return '';\r\n        case 'SELECT_EVENT':\r\n            return action.eventInstanceId;\r\n        default:\r\n            return currentInstanceId;\r\n    }\r\n}\r\n\r\nfunction reduceEventDrag(currentDrag, action) {\r\n    let newDrag;\r\n    switch (action.type) {\r\n        case 'UNSET_EVENT_DRAG':\r\n            return null;\r\n        case 'SET_EVENT_DRAG':\r\n            newDrag = action.state;\r\n            return {\r\n                affectedEvents: newDrag.affectedEvents,\r\n                mutatedEvents: newDrag.mutatedEvents,\r\n                isEvent: newDrag.isEvent,\r\n            };\r\n        default:\r\n            return currentDrag;\r\n    }\r\n}\r\n\r\nfunction reduceEventResize(currentResize, action) {\r\n    let newResize;\r\n    switch (action.type) {\r\n        case 'UNSET_EVENT_RESIZE':\r\n            return null;\r\n        case 'SET_EVENT_RESIZE':\r\n            newResize = action.state;\r\n            return {\r\n                affectedEvents: newResize.affectedEvents,\r\n                mutatedEvents: newResize.mutatedEvents,\r\n                isEvent: newResize.isEvent,\r\n            };\r\n        default:\r\n            return currentResize;\r\n    }\r\n}\r\n\r\nfunction parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\r\n    let header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\r\n    let footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\r\n    return { header, footer };\r\n}\r\nfunction parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\r\n    let sectionWidgets = {};\r\n    let viewsWithButtons = [];\r\n    let hasTitle = false;\r\n    for (let sectionName in sectionStrHash) {\r\n        let sectionStr = sectionStrHash[sectionName];\r\n        let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);\r\n        sectionWidgets[sectionName] = sectionRes.widgets;\r\n        viewsWithButtons.push(...sectionRes.viewsWithButtons);\r\n        hasTitle = hasTitle || sectionRes.hasTitle;\r\n    }\r\n    return { sectionWidgets, viewsWithButtons, hasTitle };\r\n}\r\n/*\r\nBAD: querying icons and text here. should be done at render time\r\n*/\r\nfunction parseSection(sectionStr, calendarOptions, // defaults+overrides, then refined\r\ncalendarOptionOverrides, // overrides only!, unrefined :(\r\ntheme, viewSpecs, calendarApi) {\r\n    let isRtl = calendarOptions.direction === 'rtl';\r\n    let calendarCustomButtons = calendarOptions.customButtons || {};\r\n    let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};\r\n    let calendarButtonText = calendarOptions.buttonText || {};\r\n    let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};\r\n    let calendarButtonHints = calendarOptions.buttonHints || {};\r\n    let sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];\r\n    let viewsWithButtons = [];\r\n    let hasTitle = false;\r\n    let widgets = sectionSubstrs.map((buttonGroupStr) => (buttonGroupStr.split(',').map((buttonName) => {\r\n        if (buttonName === 'title') {\r\n            hasTitle = true;\r\n            return { buttonName };\r\n        }\r\n        let customButtonProps;\r\n        let viewSpec;\r\n        let buttonClick;\r\n        let buttonIcon; // only one of these will be set\r\n        let buttonText; // \"\r\n        let buttonHint;\r\n        // ^ for the title=\"\" attribute, for accessibility\r\n        if ((customButtonProps = calendarCustomButtons[buttonName])) {\r\n            buttonClick = (ev) => {\r\n                if (customButtonProps.click) {\r\n                    customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?\r\n                }\r\n            };\r\n            (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||\r\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\r\n                (buttonText = customButtonProps.text);\r\n            buttonHint = customButtonProps.hint || customButtonProps.text;\r\n        }\r\n        else if ((viewSpec = viewSpecs[buttonName])) {\r\n            viewsWithButtons.push(buttonName);\r\n            buttonClick = () => {\r\n                calendarApi.changeView(buttonName);\r\n            };\r\n            (buttonText = viewSpec.buttonTextOverride) ||\r\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\r\n                (buttonText = viewSpec.buttonTextDefault);\r\n            let textFallback = viewSpec.buttonTextOverride ||\r\n                viewSpec.buttonTextDefault;\r\n            buttonHint = formatWithOrdinals(viewSpec.buttonTitleOverride ||\r\n                viewSpec.buttonTitleDefault ||\r\n                calendarOptions.viewHint, [textFallback, buttonName], // view-name = buttonName\r\n            textFallback);\r\n        }\r\n        else if (calendarApi[buttonName]) { // a calendarApi method\r\n            buttonClick = () => {\r\n                calendarApi[buttonName]();\r\n            };\r\n            (buttonText = calendarButtonTextOverrides[buttonName]) ||\r\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\r\n                (buttonText = calendarButtonText[buttonName]); // everything else is considered default\r\n            if (buttonName === 'prevYear' || buttonName === 'nextYear') {\r\n                let prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next';\r\n                buttonHint = formatWithOrdinals(calendarButtonHintOverrides[prevOrNext] ||\r\n                    calendarButtonHints[prevOrNext], [\r\n                    calendarButtonText.year || 'year',\r\n                    'year',\r\n                ], calendarButtonText[buttonName]);\r\n            }\r\n            else {\r\n                buttonHint = (navUnit) => formatWithOrdinals(calendarButtonHintOverrides[buttonName] ||\r\n                    calendarButtonHints[buttonName], [\r\n                    calendarButtonText[navUnit] || navUnit,\r\n                    navUnit,\r\n                ], calendarButtonText[buttonName]);\r\n            }\r\n        }\r\n        return { buttonName, buttonClick, buttonIcon, buttonText, buttonHint };\r\n    })));\r\n    return { widgets, viewsWithButtons, hasTitle };\r\n}\r\n\r\n// always represents the current view. otherwise, it'd need to change value every time date changes\r\nclass ViewImpl {\r\n    constructor(type, getCurrentData, dateEnv) {\r\n        this.type = type;\r\n        this.getCurrentData = getCurrentData;\r\n        this.dateEnv = dateEnv;\r\n    }\r\n    get calendar() {\r\n        return this.getCurrentData().calendarApi;\r\n    }\r\n    get title() {\r\n        return this.getCurrentData().viewTitle;\r\n    }\r\n    get activeStart() {\r\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);\r\n    }\r\n    get activeEnd() {\r\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);\r\n    }\r\n    get currentStart() {\r\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);\r\n    }\r\n    get currentEnd() {\r\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);\r\n    }\r\n    getOption(name) {\r\n        return this.getCurrentData().options[name]; // are the view-specific options\r\n    }\r\n}\r\n\r\nlet eventSourceDef$2 = {\r\n    ignoreRange: true,\r\n    parseMeta(refined) {\r\n        if (Array.isArray(refined.events)) {\r\n            return refined.events;\r\n        }\r\n        return null;\r\n    },\r\n    fetch(arg, successCallback) {\r\n        successCallback({\r\n            rawEvents: arg.eventSource.meta,\r\n        });\r\n    },\r\n};\r\nconst arrayEventSourcePlugin = createPlugin({\r\n    name: 'array-event-source',\r\n    eventSourceDefs: [eventSourceDef$2],\r\n});\r\n\r\nlet eventSourceDef$1 = {\r\n    parseMeta(refined) {\r\n        if (typeof refined.events === 'function') {\r\n            return refined.events;\r\n        }\r\n        return null;\r\n    },\r\n    fetch(arg, successCallback, errorCallback) {\r\n        const { dateEnv } = arg.context;\r\n        const func = arg.eventSource.meta;\r\n        unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), (rawEvents) => successCallback({ rawEvents }), errorCallback);\r\n    },\r\n};\r\nconst funcEventSourcePlugin = createPlugin({\r\n    name: 'func-event-source',\r\n    eventSourceDefs: [eventSourceDef$1],\r\n});\r\n\r\nconst JSON_FEED_EVENT_SOURCE_REFINERS = {\r\n    method: String,\r\n    extraParams: identity,\r\n    startParam: String,\r\n    endParam: String,\r\n    timeZoneParam: String,\r\n};\r\n\r\nlet eventSourceDef = {\r\n    parseMeta(refined) {\r\n        if (refined.url && (refined.format === 'json' || !refined.format)) {\r\n            return {\r\n                url: refined.url,\r\n                format: 'json',\r\n                method: (refined.method || 'GET').toUpperCase(),\r\n                extraParams: refined.extraParams,\r\n                startParam: refined.startParam,\r\n                endParam: refined.endParam,\r\n                timeZoneParam: refined.timeZoneParam,\r\n            };\r\n        }\r\n        return null;\r\n    },\r\n    fetch(arg, successCallback, errorCallback) {\r\n        const { meta } = arg.eventSource;\r\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\r\n        requestJson(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {\r\n            successCallback({ rawEvents, response });\r\n        }, errorCallback);\r\n    },\r\n};\r\nconst jsonFeedEventSourcePlugin = createPlugin({\r\n    name: 'json-event-source',\r\n    eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,\r\n    eventSourceDefs: [eventSourceDef],\r\n});\r\nfunction buildRequestParams(meta, range, context) {\r\n    let { dateEnv, options } = context;\r\n    let startParam;\r\n    let endParam;\r\n    let timeZoneParam;\r\n    let customRequestParams;\r\n    let params = {};\r\n    startParam = meta.startParam;\r\n    if (startParam == null) {\r\n        startParam = options.startParam;\r\n    }\r\n    endParam = meta.endParam;\r\n    if (endParam == null) {\r\n        endParam = options.endParam;\r\n    }\r\n    timeZoneParam = meta.timeZoneParam;\r\n    if (timeZoneParam == null) {\r\n        timeZoneParam = options.timeZoneParam;\r\n    }\r\n    // retrieve any outbound GET/POST data from the options\r\n    if (typeof meta.extraParams === 'function') {\r\n        // supplied as a function that returns a key/value object\r\n        customRequestParams = meta.extraParams();\r\n    }\r\n    else {\r\n        // probably supplied as a straight key/value object\r\n        customRequestParams = meta.extraParams || {};\r\n    }\r\n    Object.assign(params, customRequestParams);\r\n    params[startParam] = dateEnv.formatIso(range.start);\r\n    params[endParam] = dateEnv.formatIso(range.end);\r\n    if (dateEnv.timeZone !== 'local') {\r\n        params[timeZoneParam] = dateEnv.timeZone;\r\n    }\r\n    return params;\r\n}\r\n\r\nconst SIMPLE_RECURRING_REFINERS = {\r\n    daysOfWeek: identity,\r\n    startTime: createDuration,\r\n    endTime: createDuration,\r\n    duration: createDuration,\r\n    startRecur: identity,\r\n    endRecur: identity,\r\n};\r\n\r\nlet recurring = {\r\n    parse(refined, dateEnv) {\r\n        if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {\r\n            let recurringData = {\r\n                daysOfWeek: refined.daysOfWeek || null,\r\n                startTime: refined.startTime || null,\r\n                endTime: refined.endTime || null,\r\n                startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,\r\n                endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,\r\n            };\r\n            let duration;\r\n            if (refined.duration) {\r\n                duration = refined.duration;\r\n            }\r\n            if (!duration && refined.startTime && refined.endTime) {\r\n                duration = subtractDurations(refined.endTime, refined.startTime);\r\n            }\r\n            return {\r\n                allDayGuess: Boolean(!refined.startTime && !refined.endTime),\r\n                duration,\r\n                typeData: recurringData, // doesn't need endTime anymore but oh well\r\n            };\r\n        }\r\n        return null;\r\n    },\r\n    expand(typeData, framingRange, dateEnv) {\r\n        let clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });\r\n        if (clippedFramingRange) {\r\n            return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);\r\n        }\r\n        return [];\r\n    },\r\n};\r\nconst simpleRecurringEventsPlugin = createPlugin({\r\n    name: 'simple-recurring-event',\r\n    recurringTypes: [recurring],\r\n    eventRefiners: SIMPLE_RECURRING_REFINERS,\r\n});\r\nfunction expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {\r\n    let dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;\r\n    let dayMarker = startOfDay(framingRange.start);\r\n    let endMarker = framingRange.end;\r\n    let instanceStarts = [];\r\n    while (dayMarker < endMarker) {\r\n        let instanceStart;\r\n        // if everyday, or this particular day-of-week\r\n        if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\r\n            if (startTime) {\r\n                instanceStart = dateEnv.add(dayMarker, startTime);\r\n            }\r\n            else {\r\n                instanceStart = dayMarker;\r\n            }\r\n            instanceStarts.push(instanceStart);\r\n        }\r\n        dayMarker = addDays(dayMarker, 1);\r\n    }\r\n    return instanceStarts;\r\n}\r\n\r\nconst changeHandlerPlugin = createPlugin({\r\n    name: 'change-handler',\r\n    optionChangeHandlers: {\r\n        events(events, context) {\r\n            handleEventSources([events], context);\r\n        },\r\n        eventSources: handleEventSources,\r\n    },\r\n});\r\n/*\r\nBUG: if `event` was supplied, all previously-given `eventSources` will be wiped out\r\n*/\r\nfunction handleEventSources(inputs, context) {\r\n    let unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);\r\n    if (unfoundSources.length === 1 &&\r\n        inputs.length === 1 &&\r\n        Array.isArray(unfoundSources[0]._raw) &&\r\n        Array.isArray(inputs[0])) {\r\n        context.dispatch({\r\n            type: 'RESET_RAW_EVENTS',\r\n            sourceId: unfoundSources[0].sourceId,\r\n            rawEvents: inputs[0],\r\n        });\r\n        return;\r\n    }\r\n    let newInputs = [];\r\n    for (let input of inputs) {\r\n        let inputFound = false;\r\n        for (let i = 0; i < unfoundSources.length; i += 1) {\r\n            if (unfoundSources[i]._raw === input) {\r\n                unfoundSources.splice(i, 1); // delete\r\n                inputFound = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!inputFound) {\r\n            newInputs.push(input);\r\n        }\r\n    }\r\n    for (let unfoundSource of unfoundSources) {\r\n        context.dispatch({\r\n            type: 'REMOVE_EVENT_SOURCE',\r\n            sourceId: unfoundSource.sourceId,\r\n        });\r\n    }\r\n    for (let newInput of newInputs) {\r\n        context.calendarApi.addEventSource(newInput);\r\n    }\r\n}\r\n\r\nfunction handleDateProfile(dateProfile, context) {\r\n    context.emitter.trigger('datesSet', Object.assign(Object.assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));\r\n}\r\n\r\nfunction handleEventStore(eventStore, context) {\r\n    let { emitter } = context;\r\n    if (emitter.hasHandlers('eventsSet')) {\r\n        emitter.trigger('eventsSet', buildEventApis(eventStore, context));\r\n    }\r\n}\r\n\r\n/*\r\nthis array is exposed on the root namespace so that UMD plugins can add to it.\r\nsee the rollup-bundles script.\r\n*/\r\nconst globalPlugins = [\r\n    arrayEventSourcePlugin,\r\n    funcEventSourcePlugin,\r\n    jsonFeedEventSourcePlugin,\r\n    simpleRecurringEventsPlugin,\r\n    changeHandlerPlugin,\r\n    createPlugin({\r\n        name: 'misc',\r\n        isLoadingFuncs: [\r\n            (state) => computeEventSourcesLoading(state.eventSources),\r\n        ],\r\n        propSetHandlers: {\r\n            dateProfile: handleDateProfile,\r\n            eventStore: handleEventStore,\r\n        },\r\n    }),\r\n];\r\n\r\nclass TaskRunner {\r\n    constructor(runTaskOption, drainedOption) {\r\n        this.runTaskOption = runTaskOption;\r\n        this.drainedOption = drainedOption;\r\n        this.queue = [];\r\n        this.delayedRunner = new DelayedRunner(this.drain.bind(this));\r\n    }\r\n    request(task, delay) {\r\n        this.queue.push(task);\r\n        this.delayedRunner.request(delay);\r\n    }\r\n    pause(scope) {\r\n        this.delayedRunner.pause(scope);\r\n    }\r\n    resume(scope, force) {\r\n        this.delayedRunner.resume(scope, force);\r\n    }\r\n    drain() {\r\n        let { queue } = this;\r\n        while (queue.length) {\r\n            let completedTasks = [];\r\n            let task;\r\n            while ((task = queue.shift())) {\r\n                this.runTask(task);\r\n                completedTasks.push(task);\r\n            }\r\n            this.drained(completedTasks);\r\n        } // keep going, in case new tasks were added in the drained handler\r\n    }\r\n    runTask(task) {\r\n        if (this.runTaskOption) {\r\n            this.runTaskOption(task);\r\n        }\r\n    }\r\n    drained(completedTasks) {\r\n        if (this.drainedOption) {\r\n            this.drainedOption(completedTasks);\r\n        }\r\n    }\r\n}\r\n\r\n// Computes what the title at the top of the calendarApi should be for this view\r\nfunction buildTitle(dateProfile, viewOptions, dateEnv) {\r\n    let range;\r\n    // for views that span a large unit of time, show the proper interval, ignoring stray days before and after\r\n    if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {\r\n        range = dateProfile.currentRange;\r\n    }\r\n    else { // for day units or smaller, use the actual day range\r\n        range = dateProfile.activeRange;\r\n    }\r\n    return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {\r\n        isEndExclusive: dateProfile.isRangeAllDay,\r\n        defaultSeparator: viewOptions.titleRangeSeparator,\r\n    });\r\n}\r\n// Generates the format string that should be used to generate the title for the current date range.\r\n// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\r\nfunction buildTitleFormat(dateProfile) {\r\n    let { currentRangeUnit } = dateProfile;\r\n    if (currentRangeUnit === 'year') {\r\n        return { year: 'numeric' };\r\n    }\r\n    if (currentRangeUnit === 'month') {\r\n        return { year: 'numeric', month: 'long' }; // like \"September 2014\"\r\n    }\r\n    let days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);\r\n    if (days !== null && days > 1) {\r\n        // multi-day range. shorter, like \"Sep 9 - 10 2014\"\r\n        return { year: 'numeric', month: 'short', day: 'numeric' };\r\n    }\r\n    // one day. longer, like \"September 9 2014\"\r\n    return { year: 'numeric', month: 'long', day: 'numeric' };\r\n}\r\n\r\n// in future refactor, do the redux-style function(state=initial) for initial-state\r\n// also, whatever is happening in constructor, have it happen in action queue too\r\nclass CalendarDataManager {\r\n    constructor(props) {\r\n        this.computeCurrentViewData = memoize(this._computeCurrentViewData);\r\n        this.organizeRawLocales = memoize(organizeRawLocales);\r\n        this.buildLocale = memoize(buildLocale);\r\n        this.buildPluginHooks = buildBuildPluginHooks();\r\n        this.buildDateEnv = memoize(buildDateEnv$1);\r\n        this.buildTheme = memoize(buildTheme);\r\n        this.parseToolbars = memoize(parseToolbars);\r\n        this.buildViewSpecs = memoize(buildViewSpecs);\r\n        this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);\r\n        this.buildViewApi = memoize(buildViewApi);\r\n        this.buildViewUiProps = memoizeObjArg(buildViewUiProps);\r\n        this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);\r\n        this.buildEventUiBases = memoize(buildEventUiBases);\r\n        this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);\r\n        this.buildTitle = memoize(buildTitle);\r\n        this.emitter = new Emitter();\r\n        this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));\r\n        this.currentCalendarOptionsInput = {};\r\n        this.currentCalendarOptionsRefined = {};\r\n        this.currentViewOptionsInput = {};\r\n        this.currentViewOptionsRefined = {};\r\n        this.currentCalendarOptionsRefiners = {};\r\n        this.optionsForRefining = [];\r\n        this.optionsForHandling = [];\r\n        this.getCurrentData = () => this.data;\r\n        this.dispatch = (action) => {\r\n            this.actionRunner.request(action); // protects against recursive calls to _handleAction\r\n        };\r\n        this.props = props;\r\n        this.actionRunner.pause();\r\n        let dynamicOptionOverrides = {};\r\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\r\n        let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;\r\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\r\n        // wire things up\r\n        // TODO: not DRY\r\n        props.calendarApi.currentDataManager = this;\r\n        this.emitter.setThisContext(props.calendarApi);\r\n        this.emitter.setOptions(currentViewData.options);\r\n        let currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv);\r\n        let dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\r\n        if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {\r\n            currentDate = dateProfile.currentRange.start;\r\n        }\r\n        let calendarContext = {\r\n            dateEnv: optionsData.dateEnv,\r\n            options: optionsData.calendarOptions,\r\n            pluginHooks: optionsData.pluginHooks,\r\n            calendarApi: props.calendarApi,\r\n            dispatch: this.dispatch,\r\n            emitter: this.emitter,\r\n            getCurrentData: this.getCurrentData,\r\n        };\r\n        // needs to be after setThisContext\r\n        for (let callback of optionsData.pluginHooks.contextInit) {\r\n            callback(calendarContext);\r\n        }\r\n        // NOT DRY\r\n        let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);\r\n        let initialState = {\r\n            dynamicOptionOverrides,\r\n            currentViewType,\r\n            currentDate,\r\n            dateProfile,\r\n            businessHours: this.parseContextBusinessHours(calendarContext),\r\n            eventSources,\r\n            eventUiBases: {},\r\n            eventStore: createEmptyEventStore(),\r\n            renderableEventStore: createEmptyEventStore(),\r\n            dateSelection: null,\r\n            eventSelection: '',\r\n            eventDrag: null,\r\n            eventResize: null,\r\n            selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,\r\n        };\r\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), initialState);\r\n        for (let reducer of optionsData.pluginHooks.reducers) {\r\n            Object.assign(initialState, reducer(null, null, contextAndState));\r\n        }\r\n        if (computeIsLoading(initialState, calendarContext)) {\r\n            this.emitter.trigger('loading', true); // NOT DRY\r\n        }\r\n        this.state = initialState;\r\n        this.updateData();\r\n        this.actionRunner.resume();\r\n    }\r\n    resetOptions(optionOverrides, changedOptionNames) {\r\n        let { props } = this;\r\n        if (changedOptionNames === undefined) {\r\n            props.optionOverrides = optionOverrides;\r\n        }\r\n        else {\r\n            props.optionOverrides = Object.assign(Object.assign({}, (props.optionOverrides || {})), optionOverrides);\r\n            this.optionsForRefining.push(...changedOptionNames);\r\n        }\r\n        if (changedOptionNames === undefined || changedOptionNames.length) {\r\n            this.actionRunner.request({\r\n                type: 'NOTHING',\r\n            });\r\n        }\r\n    }\r\n    _handleAction(action) {\r\n        let { props, state, emitter } = this;\r\n        let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);\r\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\r\n        let currentViewType = reduceViewType(state.currentViewType, action);\r\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\r\n        // wire things up\r\n        // TODO: not DRY\r\n        props.calendarApi.currentDataManager = this;\r\n        emitter.setThisContext(props.calendarApi);\r\n        emitter.setOptions(currentViewData.options);\r\n        let calendarContext = {\r\n            dateEnv: optionsData.dateEnv,\r\n            options: optionsData.calendarOptions,\r\n            pluginHooks: optionsData.pluginHooks,\r\n            calendarApi: props.calendarApi,\r\n            dispatch: this.dispatch,\r\n            emitter,\r\n            getCurrentData: this.getCurrentData,\r\n        };\r\n        let { currentDate, dateProfile } = state;\r\n        if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack\r\n            dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\r\n        }\r\n        currentDate = reduceCurrentDate(currentDate, action);\r\n        dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);\r\n        if (action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator\r\n            action.type === 'NEXT' || // \"\r\n            !rangeContainsMarker(dateProfile.currentRange, currentDate)) {\r\n            currentDate = dateProfile.currentRange.start;\r\n        }\r\n        let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);\r\n        let eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);\r\n        let isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading\r\n        let renderableEventStore = (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?\r\n            (state.renderableEventStore || eventStore) : // try from previous state\r\n            eventStore;\r\n        let { eventUiSingleBase, selectionConfig } = this.buildViewUiProps(calendarContext); // will memoize obj\r\n        let eventUiBySource = this.buildEventUiBySource(eventSources);\r\n        let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);\r\n        let newState = {\r\n            dynamicOptionOverrides,\r\n            currentViewType,\r\n            currentDate,\r\n            dateProfile,\r\n            eventSources,\r\n            eventStore,\r\n            renderableEventStore,\r\n            selectionConfig,\r\n            eventUiBases,\r\n            businessHours: this.parseContextBusinessHours(calendarContext),\r\n            dateSelection: reduceDateSelection(state.dateSelection, action),\r\n            eventSelection: reduceSelectedEvent(state.eventSelection, action),\r\n            eventDrag: reduceEventDrag(state.eventDrag, action),\r\n            eventResize: reduceEventResize(state.eventResize, action),\r\n        };\r\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), newState);\r\n        for (let reducer of optionsData.pluginHooks.reducers) {\r\n            Object.assign(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value\r\n        }\r\n        let wasLoading = computeIsLoading(state, calendarContext);\r\n        let isLoading = computeIsLoading(newState, calendarContext);\r\n        // TODO: use propSetHandlers in plugin system\r\n        if (!wasLoading && isLoading) {\r\n            emitter.trigger('loading', true);\r\n        }\r\n        else if (wasLoading && !isLoading) {\r\n            emitter.trigger('loading', false);\r\n        }\r\n        this.state = newState;\r\n        if (props.onAction) {\r\n            props.onAction(action);\r\n        }\r\n    }\r\n    updateData() {\r\n        let { props, state } = this;\r\n        let oldData = this.data;\r\n        let optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);\r\n        let currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);\r\n        let data = this.data = Object.assign(Object.assign(Object.assign({ viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);\r\n        let changeHandlers = optionsData.pluginHooks.optionChangeHandlers;\r\n        let oldCalendarOptions = oldData && oldData.calendarOptions;\r\n        let newCalendarOptions = optionsData.calendarOptions;\r\n        if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {\r\n            if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {\r\n                // hack\r\n                state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);\r\n                state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);\r\n                state.renderableEventStore = data.renderableEventStore = rezoneEventStoreDates(data.renderableEventStore, oldData.dateEnv, data.dateEnv);\r\n            }\r\n            for (let optionName in changeHandlers) {\r\n                if (this.optionsForHandling.indexOf(optionName) !== -1 ||\r\n                    oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {\r\n                    changeHandlers[optionName](newCalendarOptions[optionName], data);\r\n                }\r\n            }\r\n        }\r\n        this.optionsForHandling = [];\r\n        if (props.onData) {\r\n            props.onData(data);\r\n        }\r\n    }\r\n    computeOptionsData(optionOverrides, dynamicOptionOverrides, calendarApi) {\r\n        // TODO: blacklist options that are handled by optionChangeHandlers\r\n        if (!this.optionsForRefining.length &&\r\n            optionOverrides === this.stableOptionOverrides &&\r\n            dynamicOptionOverrides === this.stableDynamicOptionOverrides) {\r\n            return this.stableCalendarOptionsData;\r\n        }\r\n        let { refinedOptions, pluginHooks, localeDefaults, availableLocaleData, extra, } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides);\r\n        warnUnknownOptions(extra);\r\n        let dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);\r\n        let viewSpecs = this.buildViewSpecs(pluginHooks.views, this.stableOptionOverrides, this.stableDynamicOptionOverrides, localeDefaults);\r\n        let theme = this.buildTheme(refinedOptions, pluginHooks);\r\n        let toolbarConfig = this.parseToolbars(refinedOptions, this.stableOptionOverrides, theme, viewSpecs, calendarApi);\r\n        return this.stableCalendarOptionsData = {\r\n            calendarOptions: refinedOptions,\r\n            pluginHooks,\r\n            dateEnv,\r\n            viewSpecs,\r\n            theme,\r\n            toolbarConfig,\r\n            localeDefaults,\r\n            availableRawLocales: availableLocaleData.map,\r\n        };\r\n    }\r\n    // always called from behind a memoizer\r\n    processRawCalendarOptions(optionOverrides, dynamicOptionOverrides) {\r\n        let { locales, locale } = mergeRawOptions([\r\n            BASE_OPTION_DEFAULTS,\r\n            optionOverrides,\r\n            dynamicOptionOverrides,\r\n        ]);\r\n        let availableLocaleData = this.organizeRawLocales(locales);\r\n        let availableRawLocales = availableLocaleData.map;\r\n        let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;\r\n        let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);\r\n        let refiners = this.currentCalendarOptionsRefiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\r\n        let extra = {};\r\n        let raw = mergeRawOptions([\r\n            BASE_OPTION_DEFAULTS,\r\n            localeDefaults,\r\n            optionOverrides,\r\n            dynamicOptionOverrides,\r\n        ]);\r\n        let refined = {};\r\n        let currentRaw = this.currentCalendarOptionsInput;\r\n        let currentRefined = this.currentCalendarOptionsRefined;\r\n        let anyChanges = false;\r\n        for (let optionName in raw) {\r\n            if (this.optionsForRefining.indexOf(optionName) === -1 && (raw[optionName] === currentRaw[optionName] || (COMPLEX_OPTION_COMPARATORS[optionName] &&\r\n                (optionName in currentRaw) &&\r\n                COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName])))) {\r\n                refined[optionName] = currentRefined[optionName];\r\n            }\r\n            else if (refiners[optionName]) {\r\n                refined[optionName] = refiners[optionName](raw[optionName]);\r\n                anyChanges = true;\r\n            }\r\n            else {\r\n                extra[optionName] = currentRaw[optionName];\r\n            }\r\n        }\r\n        if (anyChanges) {\r\n            this.currentCalendarOptionsInput = raw;\r\n            this.currentCalendarOptionsRefined = refined;\r\n            this.stableOptionOverrides = optionOverrides;\r\n            this.stableDynamicOptionOverrides = dynamicOptionOverrides;\r\n        }\r\n        this.optionsForHandling.push(...this.optionsForRefining);\r\n        this.optionsForRefining = [];\r\n        return {\r\n            rawOptions: this.currentCalendarOptionsInput,\r\n            refinedOptions: this.currentCalendarOptionsRefined,\r\n            pluginHooks,\r\n            availableLocaleData,\r\n            localeDefaults,\r\n            extra,\r\n        };\r\n    }\r\n    _computeCurrentViewData(viewType, optionsData, optionOverrides, dynamicOptionOverrides) {\r\n        let viewSpec = optionsData.viewSpecs[viewType];\r\n        if (!viewSpec) {\r\n            throw new Error(`viewType \"${viewType}\" is not available. Please make sure you've loaded all neccessary plugins`);\r\n        }\r\n        let { refinedOptions, extra } = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides);\r\n        warnUnknownOptions(extra);\r\n        let dateProfileGenerator = this.buildDateProfileGenerator({\r\n            dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,\r\n            duration: viewSpec.duration,\r\n            durationUnit: viewSpec.durationUnit,\r\n            usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,\r\n            dateEnv: optionsData.dateEnv,\r\n            calendarApi: this.props.calendarApi,\r\n            slotMinTime: refinedOptions.slotMinTime,\r\n            slotMaxTime: refinedOptions.slotMaxTime,\r\n            showNonCurrentDates: refinedOptions.showNonCurrentDates,\r\n            dayCount: refinedOptions.dayCount,\r\n            dateAlignment: refinedOptions.dateAlignment,\r\n            dateIncrement: refinedOptions.dateIncrement,\r\n            hiddenDays: refinedOptions.hiddenDays,\r\n            weekends: refinedOptions.weekends,\r\n            nowInput: refinedOptions.now,\r\n            validRangeInput: refinedOptions.validRange,\r\n            visibleRangeInput: refinedOptions.visibleRange,\r\n            fixedWeekCount: refinedOptions.fixedWeekCount,\r\n        });\r\n        let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);\r\n        return { viewSpec, options: refinedOptions, dateProfileGenerator, viewApi };\r\n    }\r\n    processRawViewOptions(viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {\r\n        let raw = mergeRawOptions([\r\n            BASE_OPTION_DEFAULTS,\r\n            viewSpec.optionDefaults,\r\n            localeDefaults,\r\n            optionOverrides,\r\n            viewSpec.optionOverrides,\r\n            dynamicOptionOverrides,\r\n        ]);\r\n        let refiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\r\n        let refined = {};\r\n        let currentRaw = this.currentViewOptionsInput;\r\n        let currentRefined = this.currentViewOptionsRefined;\r\n        let anyChanges = false;\r\n        let extra = {};\r\n        for (let optionName in raw) {\r\n            if (raw[optionName] === currentRaw[optionName] ||\r\n                (COMPLEX_OPTION_COMPARATORS[optionName] &&\r\n                    COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], currentRaw[optionName]))) {\r\n                refined[optionName] = currentRefined[optionName];\r\n            }\r\n            else {\r\n                if (raw[optionName] === this.currentCalendarOptionsInput[optionName] ||\r\n                    (COMPLEX_OPTION_COMPARATORS[optionName] &&\r\n                        COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName]))) {\r\n                    if (optionName in this.currentCalendarOptionsRefined) { // might be an \"extra\" prop\r\n                        refined[optionName] = this.currentCalendarOptionsRefined[optionName];\r\n                    }\r\n                }\r\n                else if (refiners[optionName]) {\r\n                    refined[optionName] = refiners[optionName](raw[optionName]);\r\n                }\r\n                else {\r\n                    extra[optionName] = raw[optionName];\r\n                }\r\n                anyChanges = true;\r\n            }\r\n        }\r\n        if (anyChanges) {\r\n            this.currentViewOptionsInput = raw;\r\n            this.currentViewOptionsRefined = refined;\r\n        }\r\n        return {\r\n            rawOptions: this.currentViewOptionsInput,\r\n            refinedOptions: this.currentViewOptionsRefined,\r\n            extra,\r\n        };\r\n    }\r\n}\r\nfunction buildDateEnv$1(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {\r\n    let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);\r\n    return new DateEnv({\r\n        calendarSystem: 'gregory',\r\n        timeZone,\r\n        namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,\r\n        locale,\r\n        weekNumberCalculation,\r\n        firstDay,\r\n        weekText,\r\n        cmdFormatter: pluginHooks.cmdFormatter,\r\n        defaultSeparator,\r\n    });\r\n}\r\nfunction buildTheme(options, pluginHooks) {\r\n    let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;\r\n    return new ThemeClass(options);\r\n}\r\nfunction buildDateProfileGenerator(props) {\r\n    let DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;\r\n    return new DateProfileGeneratorClass(props);\r\n}\r\nfunction buildViewApi(type, getCurrentData, dateEnv) {\r\n    return new ViewImpl(type, getCurrentData, dateEnv);\r\n}\r\nfunction buildEventUiBySource(eventSources) {\r\n    return mapHash(eventSources, (eventSource) => eventSource.ui);\r\n}\r\nfunction buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {\r\n    let eventUiBases = { '': eventUiSingleBase };\r\n    for (let defId in eventDefs) {\r\n        let def = eventDefs[defId];\r\n        if (def.sourceId && eventUiBySource[def.sourceId]) {\r\n            eventUiBases[defId] = eventUiBySource[def.sourceId];\r\n        }\r\n    }\r\n    return eventUiBases;\r\n}\r\nfunction buildViewUiProps(calendarContext) {\r\n    let { options } = calendarContext;\r\n    return {\r\n        eventUiSingleBase: createEventUi({\r\n            display: options.eventDisplay,\r\n            editable: options.editable,\r\n            startEditable: options.eventStartEditable,\r\n            durationEditable: options.eventDurationEditable,\r\n            constraint: options.eventConstraint,\r\n            overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,\r\n            allow: options.eventAllow,\r\n            backgroundColor: options.eventBackgroundColor,\r\n            borderColor: options.eventBorderColor,\r\n            textColor: options.eventTextColor,\r\n            color: options.eventColor,\r\n            // classNames: options.eventClassNames // render hook will handle this\r\n        }, calendarContext),\r\n        selectionConfig: createEventUi({\r\n            constraint: options.selectConstraint,\r\n            overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,\r\n            allow: options.selectAllow,\r\n        }, calendarContext),\r\n    };\r\n}\r\nfunction computeIsLoading(state, context) {\r\n    for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {\r\n        if (isLoadingFunc(state)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction parseContextBusinessHours(calendarContext) {\r\n    return parseBusinessHours(calendarContext.options.businessHours, calendarContext);\r\n}\r\nfunction warnUnknownOptions(options, viewName) {\r\n    for (let optionName in options) {\r\n        console.warn(`Unknown option '${optionName}'` +\r\n            (viewName ? ` for view '${viewName}'` : ''));\r\n    }\r\n}\r\n\r\nclass ToolbarSection extends BaseComponent {\r\n    render() {\r\n        let children = this.props.widgetGroups.map((widgetGroup) => this.renderWidgetGroup(widgetGroup));\r\n        return createElement('div', { className: 'fc-toolbar-chunk' }, ...children);\r\n    }\r\n    renderWidgetGroup(widgetGroup) {\r\n        let { props } = this;\r\n        let { theme } = this.context;\r\n        let children = [];\r\n        let isOnlyButtons = true;\r\n        for (let widget of widgetGroup) {\r\n            let { buttonName, buttonClick, buttonText, buttonIcon, buttonHint } = widget;\r\n            if (buttonName === 'title') {\r\n                isOnlyButtons = false;\r\n                children.push(createElement(\"h2\", { className: \"fc-toolbar-title\", id: props.titleId }, props.title));\r\n            }\r\n            else {\r\n                let isPressed = buttonName === props.activeButton;\r\n                let isDisabled = (!props.isTodayEnabled && buttonName === 'today') ||\r\n                    (!props.isPrevEnabled && buttonName === 'prev') ||\r\n                    (!props.isNextEnabled && buttonName === 'next');\r\n                let buttonClasses = [`fc-${buttonName}-button`, theme.getClass('button')];\r\n                if (isPressed) {\r\n                    buttonClasses.push(theme.getClass('buttonActive'));\r\n                }\r\n                children.push(createElement(\"button\", { type: \"button\", title: typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint, disabled: isDisabled, \"aria-pressed\": isPressed, className: buttonClasses.join(' '), onClick: buttonClick }, buttonText || (buttonIcon ? createElement(\"span\", { className: buttonIcon }) : '')));\r\n            }\r\n        }\r\n        if (children.length > 1) {\r\n            let groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || '';\r\n            return createElement('div', { className: groupClassName }, ...children);\r\n        }\r\n        return children[0];\r\n    }\r\n}\r\n\r\nclass Toolbar extends BaseComponent {\r\n    render() {\r\n        let { model, extraClassName } = this.props;\r\n        let forceLtr = false;\r\n        let startContent;\r\n        let endContent;\r\n        let sectionWidgets = model.sectionWidgets;\r\n        let centerContent = sectionWidgets.center;\r\n        if (sectionWidgets.left) {\r\n            forceLtr = true;\r\n            startContent = sectionWidgets.left;\r\n        }\r\n        else {\r\n            startContent = sectionWidgets.start;\r\n        }\r\n        if (sectionWidgets.right) {\r\n            forceLtr = true;\r\n            endContent = sectionWidgets.right;\r\n        }\r\n        else {\r\n            endContent = sectionWidgets.end;\r\n        }\r\n        let classNames = [\r\n            extraClassName || '',\r\n            'fc-toolbar',\r\n            forceLtr ? 'fc-toolbar-ltr' : '',\r\n        ];\r\n        return (createElement(\"div\", { className: classNames.join(' ') },\r\n            this.renderSection('start', startContent || []),\r\n            this.renderSection('center', centerContent || []),\r\n            this.renderSection('end', endContent || [])));\r\n    }\r\n    renderSection(key, widgetGroups) {\r\n        let { props } = this;\r\n        return (createElement(ToolbarSection, { key: key, widgetGroups: widgetGroups, title: props.title, navUnit: props.navUnit, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled, titleId: props.titleId }));\r\n    }\r\n}\r\n\r\nclass ViewHarness extends BaseComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            availableWidth: null,\r\n        };\r\n        this.handleEl = (el) => {\r\n            this.el = el;\r\n            setRef(this.props.elRef, el);\r\n            this.updateAvailableWidth();\r\n        };\r\n        this.handleResize = () => {\r\n            this.updateAvailableWidth();\r\n        };\r\n    }\r\n    render() {\r\n        let { props, state } = this;\r\n        let { aspectRatio } = props;\r\n        let classNames = [\r\n            'fc-view-harness',\r\n            (aspectRatio || props.liquid || props.height)\r\n                ? 'fc-view-harness-active' // harness controls the height\r\n                : 'fc-view-harness-passive', // let the view do the height\r\n        ];\r\n        let height = '';\r\n        let paddingBottom = '';\r\n        if (aspectRatio) {\r\n            if (state.availableWidth !== null) {\r\n                height = state.availableWidth / aspectRatio;\r\n            }\r\n            else {\r\n                // while waiting to know availableWidth, we can't set height to *zero*\r\n                // because will cause lots of unnecessary scrollbars within scrollgrid.\r\n                // BETTER: don't start rendering ANYTHING yet until we know container width\r\n                // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)\r\n                paddingBottom = `${(1 / aspectRatio) * 100}%`;\r\n            }\r\n        }\r\n        else {\r\n            height = props.height || '';\r\n        }\r\n        return (createElement(\"div\", { \"aria-labelledby\": props.labeledById, ref: this.handleEl, className: classNames.join(' '), style: { height, paddingBottom } }, props.children));\r\n    }\r\n    componentDidMount() {\r\n        this.context.addResizeHandler(this.handleResize);\r\n    }\r\n    componentWillUnmount() {\r\n        this.context.removeResizeHandler(this.handleResize);\r\n    }\r\n    updateAvailableWidth() {\r\n        if (this.el && // needed. but why?\r\n            this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth\r\n        ) {\r\n            this.setState({ availableWidth: this.el.offsetWidth });\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nDetects when the user clicks on an event within a DateComponent\r\n*/\r\nclass EventClicking extends Interaction {\r\n    constructor(settings) {\r\n        super(settings);\r\n        this.handleSegClick = (ev, segEl) => {\r\n            let { component } = this;\r\n            let { context } = component;\r\n            let seg = getElSeg(segEl);\r\n            if (seg && // might be the <div> surrounding the more link\r\n                component.isValidSegDownEl(ev.target)) {\r\n                // our way to simulate a link click for elements that can't be <a> tags\r\n                // grab before trigger fired in case trigger trashes DOM thru rerendering\r\n                let hasUrlContainer = elementClosest(ev.target, '.fc-event-forced-url');\r\n                let url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';\r\n                context.emitter.trigger('eventClick', {\r\n                    el: segEl,\r\n                    event: new EventImpl(component.context, seg.eventRange.def, seg.eventRange.instance),\r\n                    jsEvent: ev,\r\n                    view: context.viewApi,\r\n                });\r\n                if (url && !ev.defaultPrevented) {\r\n                    window.location.href = url;\r\n                }\r\n            }\r\n        };\r\n        this.destroy = listenBySelector(settings.el, 'click', '.fc-event', // on both fg and bg events\r\n        this.handleSegClick);\r\n    }\r\n}\r\n\r\n/*\r\nTriggers events and adds/removes core classNames when the user's pointer\r\nenters/leaves event-elements of a component.\r\n*/\r\nclass EventHovering extends Interaction {\r\n    constructor(settings) {\r\n        super(settings);\r\n        // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it\r\n        this.handleEventElRemove = (el) => {\r\n            if (el === this.currentSegEl) {\r\n                this.handleSegLeave(null, this.currentSegEl);\r\n            }\r\n        };\r\n        this.handleSegEnter = (ev, segEl) => {\r\n            if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper\r\n                this.currentSegEl = segEl;\r\n                this.triggerEvent('eventMouseEnter', ev, segEl);\r\n            }\r\n        };\r\n        this.handleSegLeave = (ev, segEl) => {\r\n            if (this.currentSegEl) {\r\n                this.currentSegEl = null;\r\n                this.triggerEvent('eventMouseLeave', ev, segEl);\r\n            }\r\n        };\r\n        this.removeHoverListeners = listenToHoverBySelector(settings.el, '.fc-event', // on both fg and bg events\r\n        this.handleSegEnter, this.handleSegLeave);\r\n    }\r\n    destroy() {\r\n        this.removeHoverListeners();\r\n    }\r\n    triggerEvent(publicEvName, ev, segEl) {\r\n        let { component } = this;\r\n        let { context } = component;\r\n        let seg = getElSeg(segEl);\r\n        if (!ev || component.isValidSegDownEl(ev.target)) {\r\n            context.emitter.trigger(publicEvName, {\r\n                el: segEl,\r\n                event: new EventImpl(context, seg.eventRange.def, seg.eventRange.instance),\r\n                jsEvent: ev,\r\n                view: context.viewApi,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nclass CalendarContent extends PureComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.buildViewContext = memoize(buildViewContext);\r\n        this.buildViewPropTransformers = memoize(buildViewPropTransformers);\r\n        this.buildToolbarProps = memoize(buildToolbarProps);\r\n        this.headerRef = createRef();\r\n        this.footerRef = createRef();\r\n        this.interactionsStore = {};\r\n        // eslint-disable-next-line\r\n        this.state = {\r\n            viewLabelId: getUniqueDomId(),\r\n        };\r\n        // Component Registration\r\n        // -----------------------------------------------------------------------------------------------------------------\r\n        this.registerInteractiveComponent = (component, settingsInput) => {\r\n            let settings = parseInteractionSettings(component, settingsInput);\r\n            let DEFAULT_INTERACTIONS = [\r\n                EventClicking,\r\n                EventHovering,\r\n            ];\r\n            let interactionClasses = DEFAULT_INTERACTIONS.concat(this.props.pluginHooks.componentInteractions);\r\n            let interactions = interactionClasses.map((TheInteractionClass) => new TheInteractionClass(settings));\r\n            this.interactionsStore[component.uid] = interactions;\r\n            interactionSettingsStore[component.uid] = settings;\r\n        };\r\n        this.unregisterInteractiveComponent = (component) => {\r\n            let listeners = this.interactionsStore[component.uid];\r\n            if (listeners) {\r\n                for (let listener of listeners) {\r\n                    listener.destroy();\r\n                }\r\n                delete this.interactionsStore[component.uid];\r\n            }\r\n            delete interactionSettingsStore[component.uid];\r\n        };\r\n        // Resizing\r\n        // -----------------------------------------------------------------------------------------------------------------\r\n        this.resizeRunner = new DelayedRunner(() => {\r\n            this.props.emitter.trigger('_resize', true); // should window resizes be considered \"forced\" ?\r\n            this.props.emitter.trigger('windowResize', { view: this.props.viewApi });\r\n        });\r\n        this.handleWindowResize = (ev) => {\r\n            let { options } = this.props;\r\n            if (options.handleWindowResize &&\r\n                ev.target === window // avoid jqui events\r\n            ) {\r\n                this.resizeRunner.request(options.windowResizeDelay);\r\n            }\r\n        };\r\n    }\r\n    /*\r\n    renders INSIDE of an outer div\r\n    */\r\n    render() {\r\n        let { props } = this;\r\n        let { toolbarConfig, options } = props;\r\n        let toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????\r\n        props.viewTitle);\r\n        let viewVGrow = false;\r\n        let viewHeight = '';\r\n        let viewAspectRatio;\r\n        if (props.isHeightAuto || props.forPrint) {\r\n            viewHeight = '';\r\n        }\r\n        else if (options.height != null) {\r\n            viewVGrow = true;\r\n        }\r\n        else if (options.contentHeight != null) {\r\n            viewHeight = options.contentHeight;\r\n        }\r\n        else {\r\n            viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall\r\n        }\r\n        let viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);\r\n        let viewLabelId = (toolbarConfig.header && toolbarConfig.header.hasTitle)\r\n            ? this.state.viewLabelId\r\n            : '';\r\n        return (createElement(ViewContextType.Provider, { value: viewContext },\r\n            toolbarConfig.header && (createElement(Toolbar, Object.assign({ ref: this.headerRef, extraClassName: \"fc-header-toolbar\", model: toolbarConfig.header, titleId: viewLabelId }, toolbarProps))),\r\n            createElement(ViewHarness, { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, labeledById: viewLabelId },\r\n                this.renderView(props),\r\n                this.buildAppendContent()),\r\n            toolbarConfig.footer && (createElement(Toolbar, Object.assign({ ref: this.footerRef, extraClassName: \"fc-footer-toolbar\", model: toolbarConfig.footer, titleId: \"\" }, toolbarProps)))));\r\n    }\r\n    componentDidMount() {\r\n        let { props } = this;\r\n        this.calendarInteractions = props.pluginHooks.calendarInteractions\r\n            .map((CalendarInteractionClass) => new CalendarInteractionClass(props));\r\n        window.addEventListener('resize', this.handleWindowResize);\r\n        let { propSetHandlers } = props.pluginHooks;\r\n        for (let propName in propSetHandlers) {\r\n            propSetHandlers[propName](props[propName], props);\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let { props } = this;\r\n        let { propSetHandlers } = props.pluginHooks;\r\n        for (let propName in propSetHandlers) {\r\n            if (props[propName] !== prevProps[propName]) {\r\n                propSetHandlers[propName](props[propName], props);\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWindowResize);\r\n        this.resizeRunner.clear();\r\n        for (let interaction of this.calendarInteractions) {\r\n            interaction.destroy();\r\n        }\r\n        this.props.emitter.trigger('_unmount');\r\n    }\r\n    buildAppendContent() {\r\n        let { props } = this;\r\n        let children = props.pluginHooks.viewContainerAppends.map((buildAppendContent) => buildAppendContent(props));\r\n        return createElement(Fragment, {}, ...children);\r\n    }\r\n    renderView(props) {\r\n        let { pluginHooks } = props;\r\n        let { viewSpec } = props;\r\n        let viewProps = {\r\n            dateProfile: props.dateProfile,\r\n            businessHours: props.businessHours,\r\n            eventStore: props.renderableEventStore,\r\n            eventUiBases: props.eventUiBases,\r\n            dateSelection: props.dateSelection,\r\n            eventSelection: props.eventSelection,\r\n            eventDrag: props.eventDrag,\r\n            eventResize: props.eventResize,\r\n            isHeightAuto: props.isHeightAuto,\r\n            forPrint: props.forPrint,\r\n        };\r\n        let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);\r\n        for (let transformer of transformers) {\r\n            Object.assign(viewProps, transformer.transform(viewProps, props));\r\n        }\r\n        let ViewComponent = viewSpec.component;\r\n        return (createElement(ViewComponent, Object.assign({}, viewProps)));\r\n    }\r\n}\r\nfunction buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {\r\n    // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid\r\n    let todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need `undefined` or else INFINITE LOOP for some reason\r\n    let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);\r\n    let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);\r\n    return {\r\n        title,\r\n        activeButton: viewSpec.type,\r\n        navUnit: viewSpec.singleUnit,\r\n        isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),\r\n        isPrevEnabled: prevInfo.isValid,\r\n        isNextEnabled: nextInfo.isValid,\r\n    };\r\n}\r\n// Plugin\r\n// -----------------------------------------------------------------------------------------------------------------\r\nfunction buildViewPropTransformers(theClasses) {\r\n    return theClasses.map((TheClass) => new TheClass());\r\n}\r\n\r\nclass Calendar extends CalendarImpl {\r\n    constructor(el, optionOverrides = {}) {\r\n        super();\r\n        this.isRendering = false;\r\n        this.isRendered = false;\r\n        this.currentClassNames = [];\r\n        this.customContentRenderId = 0;\r\n        this.handleAction = (action) => {\r\n            // actions we know we want to render immediately\r\n            switch (action.type) {\r\n                case 'SET_EVENT_DRAG':\r\n                case 'SET_EVENT_RESIZE':\r\n                    this.renderRunner.tryDrain();\r\n            }\r\n        };\r\n        this.handleData = (data) => {\r\n            this.currentData = data;\r\n            this.renderRunner.request(data.calendarOptions.rerenderDelay);\r\n        };\r\n        this.handleRenderRequest = () => {\r\n            if (this.isRendering) {\r\n                this.isRendered = true;\r\n                let { currentData } = this;\r\n                flushSync(() => {\r\n                    render(createElement(CalendarRoot, { options: currentData.calendarOptions, theme: currentData.theme, emitter: currentData.emitter }, (classNames, height, isHeightAuto, forPrint) => {\r\n                        this.setClassNames(classNames);\r\n                        this.setHeight(height);\r\n                        return (createElement(RenderId.Provider, { value: this.customContentRenderId },\r\n                            createElement(CalendarContent, Object.assign({ isHeightAuto: isHeightAuto, forPrint: forPrint }, currentData))));\r\n                    }), this.el);\r\n                });\r\n            }\r\n            else if (this.isRendered) {\r\n                this.isRendered = false;\r\n                render(null, this.el);\r\n                this.setClassNames([]);\r\n                this.setHeight('');\r\n            }\r\n        };\r\n        ensureElHasStyles(el);\r\n        this.el = el;\r\n        this.renderRunner = new DelayedRunner(this.handleRenderRequest);\r\n        new CalendarDataManager({\r\n            optionOverrides,\r\n            calendarApi: this,\r\n            onAction: this.handleAction,\r\n            onData: this.handleData,\r\n        });\r\n    }\r\n    render() {\r\n        let wasRendering = this.isRendering;\r\n        if (!wasRendering) {\r\n            this.isRendering = true;\r\n        }\r\n        else {\r\n            this.customContentRenderId += 1;\r\n        }\r\n        this.renderRunner.request();\r\n        if (wasRendering) {\r\n            this.updateSize();\r\n        }\r\n    }\r\n    destroy() {\r\n        if (this.isRendering) {\r\n            this.isRendering = false;\r\n            this.renderRunner.request();\r\n        }\r\n    }\r\n    updateSize() {\r\n        flushSync(() => {\r\n            super.updateSize();\r\n        });\r\n    }\r\n    batchRendering(func) {\r\n        this.renderRunner.pause('batchRendering');\r\n        func();\r\n        this.renderRunner.resume('batchRendering');\r\n    }\r\n    pauseRendering() {\r\n        this.renderRunner.pause('pauseRendering');\r\n    }\r\n    resumeRendering() {\r\n        this.renderRunner.resume('pauseRendering', true);\r\n    }\r\n    resetOptions(optionOverrides, changedOptionNames) {\r\n        this.currentDataManager.resetOptions(optionOverrides, changedOptionNames);\r\n    }\r\n    setClassNames(classNames) {\r\n        if (!isArraysEqual(classNames, this.currentClassNames)) {\r\n            let { classList } = this.el;\r\n            for (let className of this.currentClassNames) {\r\n                classList.remove(className);\r\n            }\r\n            for (let className of classNames) {\r\n                classList.add(className);\r\n            }\r\n            this.currentClassNames = classNames;\r\n        }\r\n    }\r\n    setHeight(height) {\r\n        applyStyleProp(this.el, 'height', height);\r\n    }\r\n}\r\n\r\nfunction formatDate(dateInput, options = {}) {\r\n    let dateEnv = buildDateEnv(options);\r\n    let formatter = createFormatter(options);\r\n    let dateMeta = dateEnv.createMarkerMeta(dateInput);\r\n    if (!dateMeta) { // TODO: warning?\r\n        return '';\r\n    }\r\n    return dateEnv.format(dateMeta.marker, formatter, {\r\n        forcedTzo: dateMeta.forcedTzo,\r\n    });\r\n}\r\nfunction formatRange(startInput, endInput, options) {\r\n    let dateEnv = buildDateEnv(typeof options === 'object' && options ? options : {}); // pass in if non-null object\r\n    let formatter = createFormatter(options);\r\n    let startMeta = dateEnv.createMarkerMeta(startInput);\r\n    let endMeta = dateEnv.createMarkerMeta(endInput);\r\n    if (!startMeta || !endMeta) { // TODO: warning?\r\n        return '';\r\n    }\r\n    return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {\r\n        forcedStartTzo: startMeta.forcedTzo,\r\n        forcedEndTzo: endMeta.forcedTzo,\r\n        isEndExclusive: options.isEndExclusive,\r\n        defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,\r\n    });\r\n}\r\n// TODO: more DRY and optimized\r\nfunction buildDateEnv(settings) {\r\n    let locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere\r\n    return new DateEnv(Object.assign(Object.assign({ timeZone: BASE_OPTION_DEFAULTS.timeZone, calendarSystem: 'gregory' }, settings), { locale }));\r\n}\r\n\r\n// HELPERS\r\n/*\r\nif nextDayThreshold is specified, slicing is done in an all-day fashion.\r\nyou can get nextDayThreshold from context.nextDayThreshold\r\n*/\r\nfunction sliceEvents(props, allDay) {\r\n    return sliceEventStore(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;\r\n}\r\n\r\nconst version = '6.1.8';\r\n\r\nexport { Calendar, createPlugin, formatDate, formatRange, globalLocales, globalPlugins, sliceEvents, version };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,gBAAgB,CAAC;AAEvB,IAAM,wBAAwB;AAAA,EAC1B,MAAM;AAAA,EACN,MAAM;AAAA,IACF,KAAK;AAAA,IACL,KAAK;AAAA,EACT;AAAA,EACA,WAAW;AAAA,EACX,YAAY;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,IACL,MAAM;AAAA,EACV;AAAA,EACA,UAAU;AAAA,EACV,cAAc;AAAA,EACd,WAAW;AAAA,EACX,UAAU;AAAA,EACV,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,cAAc;AAClB;AACA,IAAM,gBAAgB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,qBAAqB,GAAG;AAAA,EAG1E,aAAa;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM,YAAY,MAAM;AACpB,aAAQ,SAAS,QACX,UACA,QAAQ;AAAA,IAClB;AAAA,EACJ;AAAA,EAAG,UAAU;AAAA,EAAW,aAAa;AAAA,EAAY,aAAa,UAAU;AACpE,WAAO,QAAQ,sBAAsB,aAAa,IAAI,KAAK;AAAA,EAC/D;AAAE,CAAC;AACP,SAAS,mBAAmB,oBAAoB;AAC5C,MAAI,cAAc,mBAAmB,SAAS,IAAI,mBAAmB,GAAG,OAAO;AAC/E,MAAI,gBAAgB,cAAc,OAAO,kBAAkB;AAC3D,MAAI,eAAe;AAAA,IACf,IAAI;AAAA,EACR;AACA,WAAS,aAAa,eAAe;AACjC,iBAAa,UAAU,QAAQ;AAAA,EACnC;AACA,SAAO;AAAA,IACH,KAAK;AAAA,IACL;AAAA,EACJ;AACJ;AACA,SAAS,YAAY,eAAe,WAAW;AAC3C,MAAI,OAAO,kBAAkB,YAAY,CAAC,MAAM,QAAQ,aAAa,GAAG;AACpE,WAAO,YAAY,cAAc,MAAM,CAAC,cAAc,IAAI,GAAG,aAAa;AAAA,EAC9E;AACA,SAAO,YAAY,eAAe,SAAS;AAC/C;AACA,SAAS,YAAY,SAAS,WAAW;AACrC,MAAI,QAAQ,CAAC,EAAE,OAAO,WAAW,CAAC,CAAC;AACnC,MAAI,MAAM,eAAe,OAAO,SAAS,KAAK;AAC9C,SAAO,YAAY,SAAS,OAAO,GAAG;AAC1C;AACA,SAAS,eAAe,OAAO,WAAW;AACtC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,QAAI,QAAQ,MAAM,GAAG,kBAAkB,EAAE,MAAM,GAAG;AAClD,aAAS,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK,GAAG;AACtC,UAAI,WAAW,MAAM,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACzC,UAAI,UAAU,WAAW;AACrB,eAAO,UAAU;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,YAAY,SAAS,OAAO,KAAK;AACtC,MAAI,SAAS,WAAW,CAAC,uBAAuB,GAAG,GAAG,CAAC,YAAY,CAAC;AACpE,SAAO,OAAO;AACd,MAAI,EAAE,KAAK,IAAI;AACf,SAAO,OAAO;AACd,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA,oBAAoB,IAAI,KAAK,aAAa,OAAO;AAAA,IACjD,SAAS;AAAA,EACb;AACJ;AAGA,SAAS,aAAa,OAAO;AACzB,SAAO;AAAA,IACH,IAAI,KAAK;AAAA,IACT,MAAM,MAAM;AAAA,IACZ,oBAAoB,MAAM,qBAAqB,IAAI,KAAK,MAAM,kBAAkB,IAAI;AAAA,IACpF,MAAM,MAAM,QAAQ,CAAC;AAAA,IACrB,UAAU,MAAM,YAAY,CAAC;AAAA,IAC7B,gBAAgB,MAAM,kBAAkB,CAAC;AAAA,IACzC,aAAa,CAAC,EAAE,OAAO,MAAM,eAAe,CAAC,CAAC;AAAA,IAC9C,eAAe,MAAM,iBAAiB,CAAC;AAAA,IACvC,sBAAsB,MAAM,wBAAwB,CAAC;AAAA,IACrD,qBAAqB,MAAM,uBAAuB,CAAC;AAAA,IACnD,yBAAyB,MAAM,2BAA2B,CAAC;AAAA,IAC3D,4BAA4B,MAAM,8BAA8B,CAAC;AAAA,IACjE,0BAA0B,MAAM,4BAA4B,CAAC;AAAA,IAC7D,2BAA2B,MAAM,6BAA6B,CAAC;AAAA,IAC/D,qBAAqB,MAAM,uBAAuB,CAAC;AAAA,IACnD,oBAAoB,MAAM,sBAAsB,CAAC;AAAA,IACjD,OAAO,MAAM,SAAS,CAAC;AAAA,IACvB,uBAAuB,MAAM,yBAAyB,CAAC;AAAA,IACvD,cAAc,MAAM,gBAAgB;AAAA,IACpC,uBAAuB,MAAM,yBAAyB,CAAC;AAAA,IACvD,sBAAsB,MAAM,wBAAwB,CAAC;AAAA,IACrD,uBAAuB,MAAM,yBAAyB,CAAC;AAAA,IACvD,uBAAuB,MAAM,yBAAyB,CAAC;AAAA,IACvD,sBAAsB,MAAM,wBAAwB,CAAC;AAAA,IACrD,cAAc,MAAM,gBAAgB,CAAC;AAAA,IACrC,iBAAiB,MAAM,mBAAmB,CAAC;AAAA,IAC3C,cAAc,MAAM;AAAA,IACpB,gBAAgB,MAAM,kBAAkB,CAAC;AAAA,IACzC,oBAAoB,MAAM;AAAA,IAC1B,aAAa,MAAM,eAAe;AAAA,IAClC,qBAAqB,MAAM;AAAA,IAC3B,sBAAsB,MAAM,wBAAwB,CAAC;AAAA,IACrD,gBAAgB,MAAM,kBAAkB;AAAA,IACxC,kBAAkB,MAAM,oBAAoB,CAAC;AAAA,IAC7C,gBAAgB,MAAM,kBAAkB,CAAC;AAAA,IACzC,iBAAiB,MAAM,mBAAmB,CAAC;AAAA,EAC/C;AACJ;AACA,SAAS,iBAAiB,YAAY,YAAY;AAC9C,MAAI,mBAAmB,CAAC;AACxB,MAAI,QAAQ;AAAA,IACR,oBAAoB;AAAA,IACpB,UAAU,CAAC;AAAA,IACX,gBAAgB,CAAC;AAAA,IACjB,aAAa,CAAC;AAAA,IACd,eAAe,CAAC;AAAA,IAChB,sBAAsB,CAAC;AAAA,IACvB,qBAAqB,CAAC;AAAA,IACtB,yBAAyB,CAAC;AAAA,IAC1B,4BAA4B,CAAC;AAAA,IAC7B,0BAA0B,CAAC;AAAA,IAC3B,2BAA2B,CAAC;AAAA,IAC5B,qBAAqB,CAAC;AAAA,IACtB,oBAAoB,CAAC;AAAA,IACrB,OAAO,CAAC;AAAA,IACR,uBAAuB,CAAC;AAAA,IACxB,cAAc;AAAA,IACd,uBAAuB,CAAC;AAAA,IACxB,sBAAsB,CAAC;AAAA,IACvB,uBAAuB,CAAC;AAAA,IACxB,uBAAuB,CAAC;AAAA,IACxB,sBAAsB,CAAC;AAAA,IACvB,cAAc,CAAC;AAAA,IACf,iBAAiB,CAAC;AAAA,IAClB,cAAc;AAAA,IACd,gBAAgB,CAAC;AAAA,IACjB,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,qBAAqB;AAAA,IACrB,sBAAsB,CAAC;AAAA,IACvB,gBAAgB;AAAA,IAChB,kBAAkB,CAAC;AAAA,IACnB,gBAAgB,CAAC;AAAA,IACjB,iBAAiB,CAAC;AAAA,EACtB;AACA,WAAS,QAAQ,MAAM;AACnB,aAAS,OAAO,MAAM;AAClB,YAAM,aAAa,IAAI;AACvB,YAAM,YAAY,iBAAiB;AACnC,UAAI,cAAc,QAAW;AACzB,yBAAiB,cAAc,IAAI;AACnC,gBAAQ,IAAI,IAAI;AAChB,gBAAQ,aAAa,OAAO,GAAG;AAAA,MACnC,WACS,cAAc,IAAI,IAAI;AAE3B,gBAAQ,KAAK,qBAAqB,aAAa;AAAA,MACnD;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,YAAY;AACZ,YAAQ,UAAU;AAAA,EACtB;AACA,UAAQ,UAAU;AAClB,SAAO;AACX;AACA,SAAS,wBAAwB;AAC7B,MAAI,sBAAsB,CAAC;AAC3B,MAAI,oBAAoB,CAAC;AACzB,MAAI;AACJ,SAAO,CAAC,cAAc,eAAe;AACjC,QAAI,CAAC,gBAAgB,CAAC,cAAc,cAAc,mBAAmB,KAAK,CAAC,cAAc,YAAY,iBAAiB,GAAG;AACrH,qBAAe,iBAAiB,cAAc,UAAU;AAAA,IAC5D;AACA,0BAAsB;AACtB,wBAAoB;AACpB,WAAO;AAAA,EACX;AACJ;AACA,SAAS,aAAa,QAAQ,QAAQ;AAClC,SAAO;AAAA,IACH,oBAAoB,qBAAqB,OAAO,oBAAoB,OAAO,kBAAkB;AAAA,IAC7F,UAAU,OAAO,SAAS,OAAO,OAAO,QAAQ;AAAA,IAChD,gBAAgB,OAAO,eAAe,OAAO,OAAO,cAAc;AAAA,IAClE,aAAa,OAAO,YAAY,OAAO,OAAO,WAAW;AAAA,IACzD,eAAe,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,aAAa,GAAG,OAAO,aAAa;AAAA,IAC1F,sBAAsB,OAAO,qBAAqB,OAAO,OAAO,oBAAoB;AAAA,IACpF,qBAAqB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,mBAAmB,GAAG,OAAO,mBAAmB;AAAA,IAC5G,yBAAyB,OAAO,wBAAwB,OAAO,OAAO,uBAAuB;AAAA,IAC7F,4BAA4B,OAAO,2BAA2B,OAAO,OAAO,0BAA0B;AAAA,IACtG,0BAA0B,OAAO,yBAAyB,OAAO,OAAO,wBAAwB;AAAA,IAChG,2BAA2B,OAAO,0BAA0B,OAAO,OAAO,yBAAyB;AAAA,IACnG,qBAAqB,OAAO,oBAAoB,OAAO,OAAO,mBAAmB;AAAA,IACjF,oBAAoB,OAAO,mBAAmB,OAAO,OAAO,kBAAkB;AAAA,IAC9E,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,KAAK,GAAG,OAAO,KAAK;AAAA,IAClE,uBAAuB,OAAO,sBAAsB,OAAO,OAAO,qBAAqB;AAAA,IACvF,cAAc,OAAO,gBAAgB,OAAO;AAAA,IAC5C,uBAAuB,OAAO,sBAAsB,OAAO,OAAO,qBAAqB;AAAA,IACvF,sBAAsB,OAAO,qBAAqB,OAAO,OAAO,oBAAoB;AAAA,IACpF,uBAAuB,OAAO,sBAAsB,OAAO,OAAO,qBAAqB;AAAA,IACvF,sBAAsB,OAAO,qBAAqB,OAAO,OAAO,oBAAoB;AAAA,IACpF,uBAAuB,OAAO,sBAAsB,OAAO,OAAO,qBAAqB;AAAA,IACvF,cAAc,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,YAAY,GAAG,OAAO,YAAY;AAAA,IACvF,iBAAiB,OAAO,gBAAgB,OAAO,OAAO,eAAe;AAAA,IACrE,cAAc,OAAO,gBAAgB,OAAO;AAAA,IAC5C,gBAAgB,OAAO,eAAe,OAAO,OAAO,cAAc;AAAA,IAClE,oBAAoB,OAAO,sBAAsB,OAAO;AAAA,IACxD,aAAa,OAAO,eAAe,OAAO;AAAA,IAC1C,qBAAqB,OAAO,uBAAuB,OAAO;AAAA,IAC1D,sBAAsB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,oBAAoB,GAAG,OAAO,oBAAoB;AAAA,IAC/G,gBAAgB,OAAO,kBAAkB,OAAO;AAAA,IAChD,kBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,gBAAgB,GAAG,OAAO,gBAAgB;AAAA,IACnG,gBAAgB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,cAAc,GAAG,OAAO,cAAc;AAAA,IAC7F,iBAAiB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,eAAe,GAAG,OAAO,eAAe;AAAA,EACpG;AACJ;AACA,SAAS,qBAAqB,OAAO,OAAO;AACxC,MAAI,UAAU,QAAW;AACrB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,QAAW;AACrB,WAAO;AAAA,EACX;AACA,SAAO,IAAI,KAAK,KAAK,IAAI,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,CAAC;AAC9D;AAEA,IAAM,gBAAN,cAA4B,MAAM;AAClC;AACA,cAAc,UAAU,UAAU;AAAA,EAC9B,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,cAAc;AAClB;AACA,cAAc,UAAU,gBAAgB;AACxC,cAAc,UAAU,cAAc;AAAA,EAClC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,UAAU;AAAA,EACV,UAAU;AACd;AACA,cAAc,UAAU,iBAAiB;AAAA,EACrC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,UAAU;AAAA,EACV,UAAU;AACd;AACA,cAAc,UAAU,qBAAqB;AAC7C,cAAc,UAAU,iCAAiC;AACzD,cAAc,UAAU,qBAAqB;AAE7C,SAAS,gBAAgB,gBAAgB,iBAAiB;AACtD,MAAI,OAAO,CAAC;AACZ,MAAI;AACJ,OAAK,YAAY,gBAAgB;AAC7B,kBAAc,UAAU,MAAM,gBAAgB,eAAe;AAAA,EACjE;AACA,OAAK,YAAY,iBAAiB;AAC9B,kBAAc,UAAU,MAAM,gBAAgB,eAAe;AAAA,EACjE;AACA,SAAO;AACX;AACA,SAAS,cAAc,UAAU,MAAM,gBAAgB,iBAAiB;AACpE,MAAI,KAAK,WAAW;AAChB,WAAO,KAAK;AAAA,EAChB;AACA,MAAI,UAAU,aAAa,UAAU,MAAM,gBAAgB,eAAe;AAC1E,MAAI,SAAS;AACT,SAAK,YAAY;AAAA,EACrB;AACA,SAAO;AACX;AACA,SAAS,aAAa,UAAU,MAAM,gBAAgB,iBAAiB;AACnE,MAAI,gBAAgB,eAAe;AACnC,MAAI,iBAAiB,gBAAgB;AACrC,MAAI,YAAY,CAAC,SAAW,iBAAiB,cAAc,UAAU,OAAQ,cAAc,QACrF,kBAAkB,eAAe,UAAU,OAAQ,eAAe,QAAQ;AAChF,MAAI,eAAe,UAAU,WAAW;AACxC,MAAI,YAAY,UAAU,WAAW;AACrC,MAAI,WAAW;AACf,MAAI,WAAW;AACX,QAAI,cAAc,UAAU;AACxB,YAAM,IAAI,MAAM,sDAAuD;AAAA,IAC3E;AACA,eAAW,cAAc,WAAW,MAAM,gBAAgB,eAAe;AAAA,EAC7E;AACA,MAAI,CAAC,gBAAgB,UAAU;AAC3B,mBAAe,SAAS;AAAA,EAC5B;AACA,MAAI,CAAC,cAAc;AACf,WAAO;AAAA,EACX;AACA,SAAO;AAAA,IACH,MAAM;AAAA,IACN,WAAW;AAAA,IACX,UAAU,OAAO,OAAO,OAAO,OAAO,CAAC,GAAI,WAAW,SAAS,WAAW,CAAC,CAAE,GAAI,gBAAgB,cAAc,aAAa,CAAC,CAAE;AAAA,IAC/H,WAAW,OAAO,OAAO,OAAO,OAAO,CAAC,GAAI,WAAW,SAAS,YAAY,CAAC,CAAE,GAAI,iBAAiB,eAAe,aAAa,CAAC,CAAE;AAAA,EACvI;AACJ;AAEA,SAAS,iBAAiB,QAAQ;AAC9B,SAAO,QAAQ,QAAQ,eAAe;AAC1C;AACA,SAAS,gBAAgB,OAAO;AAC5B,MAAI,aAAa,OAAO,UAAU,aAC9B,EAAE,WAAW,MAAM,IACnB;AACJ,MAAI,EAAE,UAAU,IAAI;AACpB,MAAI,WAAW,SAAS;AAEpB,gBAAY,wBAAwB,UAAU;AAAA,EAClD,WACS,aAAa,EAAE,UAAU,qBAAqB,gBAAgB;AAGnE,gBAAY,wBAAwB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,UAAU,GAAG,EAAE,SAAS,UAAU,CAAC,CAAC;AAAA,EAC5G;AACA,SAAO;AAAA,IACH,WAAW,WAAW;AAAA,IACtB;AAAA,IACA;AAAA,EACJ;AACJ;AACA,SAAS,wBAAwB,SAAS;AACtC,SAAO,CAAC,cAAe,EAAc,gBAAgB,UAAU,MAAM,CAAC,YAAa,EAAc,kBAAkB,EAAE,OAAO,OAAO,WAAW,oBAAoB,QAAQ,QAAQ,GAAG,aAAa,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,SAAS,GAAG,EAAE,kBAAkB,QAAQ,QAAQ,iBAAiB,CAAC,GAAG,eAAe,QAAW,iBAAiB,QAAQ,SAAS,oBAAoB,QAAQ,YAAY,UAAU,QAAQ,UAAU,aAAa,QAAQ,YAAY,CAAC,CAAE;AAC/c;AAEA,SAAS,eAAe,eAAe,iBAAiB,wBAAwB,gBAAgB;AAC5F,MAAI,iBAAiB,iBAAiB,aAAa;AACnD,MAAI,kBAAkB,iBAAiB,gBAAgB,KAAK;AAC5D,MAAI,WAAW,gBAAgB,gBAAgB,eAAe;AAC9D,SAAO,QAAQ,UAAU,CAAC,YAAY,cAAc,SAAS,iBAAiB,iBAAiB,wBAAwB,cAAc,CAAC;AAC1I;AACA,SAAS,cAAc,SAAS,iBAAiB,iBAAiB,wBAAwB,gBAAgB;AACtG,MAAI,gBAAgB,QAAQ,UAAU,YAClC,QAAQ,SAAS,YACjB,uBAAuB,YACvB,gBAAgB;AACpB,MAAI,WAAW;AACf,MAAI,eAAe;AACnB,MAAI,aAAa;AACjB,MAAI,sBAAsB,CAAC;AAC3B,MAAI,eAAe;AACf,eAAW,qBAAqB,aAAa;AAC7C,QAAI,UAAU;AACV,UAAI,QAAQ,4BAA4B,QAAQ;AAChD,qBAAe,MAAM;AACrB,UAAI,MAAM,UAAU,GAAG;AACnB,qBAAa;AACb,8BAAsB,gBAAgB,gBAAgB,gBAAgB,cAAc,aAAa,CAAC;AAAA,MACtG;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,kBAAkB,CAAC,kBAAkB;AACrC,QAAI,gBAAgB,cAAc,cAAc,CAAC;AACjD,QAAI,gBAAgB,QAAQ,SAAS;AACrC,QAAI,iBAAiB,QAAQ,cAAc,kBAAkB,MAAM;AAC/D,aAAO,cAAc;AAAA,IACzB;AACA,QAAI,cAAc,QAAQ,SAAS,MAAM;AACrC,aAAO,cAAc,QAAQ;AAAA,IACjC;AACA,QAAI,cAAc,eAAe,MAAM;AACnC,aAAO,cAAc;AAAA,IACzB;AACA,WAAO;AAAA,EACX;AACA,MAAI,mBAAmB,CAAC,kBAAkB;AACtC,QAAI,cAAc,cAAc,eAAe,CAAC;AAChD,QAAI,YAAY,QAAQ,SAAS;AACjC,QAAI,aAAa,QAAQ,YAAY,cAAc,MAAM;AACrD,aAAO,YAAY;AAAA,IACvB;AACA,QAAI,YAAY,QAAQ,SAAS,MAAM;AACnC,aAAO,YAAY,QAAQ;AAAA,IAC/B;AACA,QAAI,YAAY,eAAe,MAAM;AACjC,aAAO,YAAY;AAAA,IACvB;AACA,WAAO;AAAA,EACX;AACA,SAAO;AAAA,IACH,MAAM,QAAQ;AAAA,IACd,WAAW,QAAQ;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA,gBAAgB,QAAQ;AAAA,IACxB,iBAAiB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,mBAAmB,GAAG,QAAQ,SAAS;AAAA,IACxF,oBAAoB,gBAAgB,sBAAsB,KACtD,gBAAgB,eAAe,KAC/B,QAAQ,UAAU;AAAA,IACtB,mBAAmB,gBAAgB,cAAc,KAC7C,QAAQ,SAAS,cACjB,gBAAgB,oBAAoB,KACpC,QAAQ;AAAA,IAEZ,qBAAqB,iBAAiB,sBAAsB,KACxD,iBAAiB,eAAe,KAChC,QAAQ,UAAU;AAAA,IACtB,oBAAoB,iBAAiB,cAAc,KAC/C,QAAQ,SAAS,cACjB,iBAAiB,oBAAoB;AAAA,EAE7C;AACJ;AAEA,IAAI,mBAAmB,CAAC;AACxB,SAAS,qBAAqB,eAAe;AACzC,MAAI,OAAO,KAAK,UAAU,aAAa;AACvC,MAAI,MAAM,iBAAiB;AAC3B,MAAI,QAAQ,QAAW;AACnB,UAAM,eAAe,aAAa;AAClC,qBAAiB,QAAQ;AAAA,EAC7B;AACA,SAAO;AACX;AAEA,SAAS,eAAe,UAAU,QAAQ;AACtC,UAAQ,OAAO;AAAA,SACN;AACD,iBAAW,OAAO;AAAA;AAE1B,SAAO;AACX;AAEA,SAAS,6BAA6B,wBAAwB,QAAQ;AAClE,UAAQ,OAAO;AAAA,SACN;AACD,aAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,sBAAsB,GAAG,EAAE,CAAC,OAAO,aAAa,OAAO,eAAe,CAAC;AAAA;AAE9G,aAAO;AAAA;AAEnB;AAEA,SAAS,kBAAkB,oBAAoB,QAAQ,aAAa,sBAAsB;AACtF,MAAI;AACJ,UAAQ,OAAO;AAAA,SACN;AACD,aAAO,qBAAqB,MAAM,OAAO,cAAc,WAAW;AAAA,SACjE;AACD,aAAO,qBAAqB,MAAM,OAAO,UAAU;AAAA,SAClD;AACD,WAAK,qBAAqB,UAAU,oBAAoB,WAAW;AACnE,UAAI,GAAG,SAAS;AACZ,eAAO;AAAA,MACX;AACA;AAAA,SACC;AACD,WAAK,qBAAqB,UAAU,oBAAoB,WAAW;AACnE,UAAI,GAAG,SAAS;AACZ,eAAO;AAAA,MACX;AACA;AAAA;AAER,SAAO;AACX;AAEA,SAAS,iBAAiB,iBAAiB,aAAa,SAAS;AAC7D,MAAI,cAAc,cAAc,YAAY,cAAc;AAC1D,SAAO,WAAW,CAAC,GAAG,oBAAoB,iBAAiB,OAAO,GAAG,aAAa,OAAO;AAC7F;AACA,SAAS,mBAAmB,cAAc,QAAQ,aAAa,SAAS;AACpE,MAAI,cAAc,cAAc,YAAY,cAAc;AAC1D,UAAQ,OAAO;AAAA,SACN;AACD,aAAO,WAAW,cAAc,OAAO,SAAS,aAAa,OAAO;AAAA,SACnE;AACD,aAAO,aAAa,cAAc,OAAO,QAAQ;AAAA,SAChD;AAAA,SACA;AAAA,SACA;AAAA,SACA;AACD,UAAI,aAAa;AACb,eAAO,kBAAkB,cAAc,aAAa,OAAO;AAAA,MAC/D;AACA,aAAO;AAAA,SACN;AACD,aAAO,kBAAkB,cAAc,OAAO,YAC1C,YAAY,OAAO,SAAS,IAC5B,qBAAqB,cAAc,OAAO,GAAG,aAAa,OAAO,aAAa,OAAO,OAAO;AAAA,SAC/F;AAAA,SACA;AACD,aAAO,gBAAgB,cAAc,OAAO,UAAU,OAAO,SAAS,OAAO,UAAU;AAAA,SACtF;AACD,aAAO,CAAC;AAAA;AAER,aAAO;AAAA;AAEnB;AACA,SAAS,8BAA8B,cAAc,aAAa,SAAS;AACvE,MAAI,cAAc,cAAc,YAAY,cAAc;AAC1D,SAAO,kBAAkB,cAAc,qBAAqB,cAAc,OAAO,GAAG,aAAa,MAAM,OAAO;AAClH;AACA,SAAS,2BAA2B,cAAc;AAC9C,WAAS,YAAY,cAAc;AAC/B,QAAI,aAAa,UAAU,YAAY;AACnC,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,WAAW,iBAAiB,SAAS,YAAY,SAAS;AAC/D,MAAI,OAAO,CAAC;AACZ,WAAS,UAAU,SAAS;AACxB,SAAK,OAAO,YAAY;AAAA,EAC5B;AACA,MAAI,YAAY;AACZ,WAAO,kBAAkB,MAAM,YAAY,OAAO;AAAA,EACtD;AACA,SAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,eAAe,GAAG,IAAI;AACjE;AACA,SAAS,aAAa,iBAAiB,UAAU;AAC7C,SAAO,WAAW,iBAAiB,CAAC,gBAAgB,YAAY,aAAa,QAAQ;AACzF;AACA,SAAS,kBAAkB,YAAY,YAAY,SAAS;AACxD,SAAO,kBAAkB,YAAY,WAAW,YAAY,CAAC,gBAAgB,cAAc,aAAa,YAAY,OAAO,CAAC,GAAG,YAAY,OAAO,OAAO;AAC7J;AACA,SAAS,cAAc,aAAa,YAAY,SAAS;AACrD,MAAI,CAAC,oBAAoB,aAAa,OAAO,GAAG;AAC5C,WAAO,CAAC,YAAY;AAAA,EACxB;AACA,SAAO,CAAC,QAAQ,QAAQ,gBACpB,CAAC,YAAY,cACb,YAAY,cACZ,WAAW,QAAQ,YAAY,WAAW,SAC1C,WAAW,MAAM,YAAY,WAAW;AAChD;AACA,SAAS,kBAAkB,aAAa,cAAc,YAAY,WAAW,SAAS;AAClF,MAAI,cAAc,CAAC;AACnB,WAAS,YAAY,aAAa;AAC9B,QAAI,SAAS,YAAY;AACzB,QAAI,aAAa,WAAW;AACxB,kBAAY,YAAY,YAAY,QAAQ,YAAY,WAAW,OAAO;AAAA,IAC9E,OACK;AACD,kBAAY,YAAY;AAAA,IAC5B;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,YAAY,aAAa,YAAY,WAAW,SAAS;AAC9D,MAAI,EAAE,SAAS,YAAY,IAAI;AAC/B,MAAI,YAAY,QAAQ,YAAY,gBAAgB,YAAY;AAChE,MAAI,UAAU,KAAK;AACnB,YAAU,MAAM;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,EACJ,GAAG,CAAC,QAAQ;AACR,QAAI,EAAE,UAAU,IAAI;AACpB,QAAI,QAAQ,oBAAoB;AAC5B,kBAAY,QAAQ,mBAAmB,KAAK,aAAa,WAAW,IAAI,QAAQ,KAAK;AAAA,IACzF;AACA,QAAI,YAAY,SAAS;AACrB,kBAAY,YAAY,QAAQ,KAAK,aAAa,WAAW,IAAI,QAAQ,KAAK;AAAA,IAClF;AACA,YAAQ,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU,YAAY;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL,GAAG,CAAC,UAAU;AACV,QAAI,eAAe;AACnB,QAAI,QAAQ,oBAAoB;AAC5B,cAAQ,mBAAmB,KAAK,aAAa,KAAK;AAClD,qBAAe;AAAA,IACnB;AACA,QAAI,YAAY,SAAS;AACrB,kBAAY,QAAQ,KAAK;AACzB,qBAAe;AAAA,IACnB;AACA,QAAI,CAAC,cAAc;AACf,cAAQ,KAAK,MAAM,SAAS,KAAK;AAAA,IACrC;AACA,YAAQ,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU,YAAY;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,SAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,YAAY,MAAM,eAAe,QAAQ,CAAC;AACrG;AACA,SAAS,gBAAgB,YAAY,UAAU,SAAS,YAAY;AAChE,MAAI,cAAc,WAAW;AAC7B,MAAI,eACA,YAAY,YAAY,eAAe;AACvC,WAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,UAAU,GAAG,EAAE,CAAC,WAAW,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,YAAY,OAAO,WAAW,CAAC,EAAE,CAAC;AAAA,EACxJ;AACA,SAAO;AACX;AACA,SAAS,qBAAqB,cAAc,SAAS;AACjD,SAAO,WAAW,cAAc,CAAC,gBAAgB,oBAAoB,aAAa,OAAO,CAAC;AAC9F;AACA,SAAS,oBAAoB,YAAY,SAAS;AAC9C,MAAI,WAAW,yBAAyB,OAAO;AAC/C,MAAI,aAAa,CAAC,EAAE,OAAO,WAAW,gBAAgB,CAAC,CAAC;AACxD,MAAI,UAAU,CAAC;AACf,MAAI,WAAW,eAAe;AAC1B,eAAW,QAAQ,WAAW,aAAa;AAAA,EAC/C;AACA,MAAI,WAAW,QAAQ;AACnB,eAAW,QAAQ,WAAW,MAAM;AAAA,EACxC;AACA,WAAS,aAAa,YAAY;AAC9B,QAAI,SAAS,iBAAiB,WAAW,SAAS,QAAQ;AAC1D,QAAI,QAAQ;AACR,cAAQ,KAAK,MAAM;AAAA,IACvB;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,oBAAoB,aAAa,SAAS;AAC/C,MAAI,OAAO,QAAQ,YAAY;AAC/B,SAAO,CAAC,KAAK,YAAY,aAAa;AAC1C;AAEA,SAAS,oBAAoB,kBAAkB,QAAQ;AACnD,UAAQ,OAAO;AAAA,SACN;AACD,aAAO;AAAA,SACN;AACD,aAAO,OAAO;AAAA;AAEd,aAAO;AAAA;AAEnB;AAEA,SAAS,oBAAoB,mBAAmB,QAAQ;AACpD,UAAQ,OAAO;AAAA,SACN;AACD,aAAO;AAAA,SACN;AACD,aAAO,OAAO;AAAA;AAEd,aAAO;AAAA;AAEnB;AAEA,SAAS,gBAAgB,aAAa,QAAQ;AAC1C,MAAI;AACJ,UAAQ,OAAO;AAAA,SACN;AACD,aAAO;AAAA,SACN;AACD,gBAAU,OAAO;AACjB,aAAO;AAAA,QACH,gBAAgB,QAAQ;AAAA,QACxB,eAAe,QAAQ;AAAA,QACvB,SAAS,QAAQ;AAAA,MACrB;AAAA;AAEA,aAAO;AAAA;AAEnB;AAEA,SAAS,kBAAkB,eAAe,QAAQ;AAC9C,MAAI;AACJ,UAAQ,OAAO;AAAA,SACN;AACD,aAAO;AAAA,SACN;AACD,kBAAY,OAAO;AACnB,aAAO;AAAA,QACH,gBAAgB,UAAU;AAAA,QAC1B,eAAe,UAAU;AAAA,QACzB,SAAS,UAAU;AAAA,MACvB;AAAA;AAEA,aAAO;AAAA;AAEnB;AAEA,SAAS,cAAc,iBAAiB,yBAAyB,OAAO,WAAW,aAAa;AAC5F,MAAI,SAAS,gBAAgB,gBAAgB,aAAa,gBAAgB,eAAe,iBAAiB,yBAAyB,OAAO,WAAW,WAAW,IAAI;AACpK,MAAI,SAAS,gBAAgB,gBAAgB,aAAa,gBAAgB,eAAe,iBAAiB,yBAAyB,OAAO,WAAW,WAAW,IAAI;AACpK,SAAO,EAAE,QAAQ,OAAO;AAC5B;AACA,SAAS,aAAa,gBAAgB,iBAAiB,yBAAyB,OAAO,WAAW,aAAa;AAC3G,MAAI,iBAAiB,CAAC;AACtB,MAAI,mBAAmB,CAAC;AACxB,MAAI,WAAW;AACf,WAAS,eAAe,gBAAgB;AACpC,QAAI,aAAa,eAAe;AAChC,QAAI,aAAa,aAAa,YAAY,iBAAiB,yBAAyB,OAAO,WAAW,WAAW;AACjH,mBAAe,eAAe,WAAW;AACzC,qBAAiB,KAAK,GAAG,WAAW,gBAAgB;AACpD,eAAW,YAAY,WAAW;AAAA,EACtC;AACA,SAAO,EAAE,gBAAgB,kBAAkB,SAAS;AACxD;AAIA,SAAS,aAAa,YAAY,iBAClC,yBACA,OAAO,WAAW,aAAa;AAC3B,MAAI,QAAQ,gBAAgB,cAAc;AAC1C,MAAI,wBAAwB,gBAAgB,iBAAiB,CAAC;AAC9D,MAAI,8BAA8B,wBAAwB,cAAc,CAAC;AACzE,MAAI,qBAAqB,gBAAgB,cAAc,CAAC;AACxD,MAAI,8BAA8B,wBAAwB,eAAe,CAAC;AAC1E,MAAI,sBAAsB,gBAAgB,eAAe,CAAC;AAC1D,MAAI,iBAAiB,aAAa,WAAW,MAAM,GAAG,IAAI,CAAC;AAC3D,MAAI,mBAAmB,CAAC;AACxB,MAAI,WAAW;AACf,MAAI,UAAU,eAAe,IAAI,CAAC,mBAAoB,eAAe,MAAM,GAAG,EAAE,IAAI,CAAC,eAAe;AAChG,QAAI,eAAe,SAAS;AACxB,iBAAW;AACX,aAAO,EAAE,WAAW;AAAA,IACxB;AACA,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAK,oBAAoB,sBAAsB,aAAc;AACzD,oBAAc,CAAC,OAAO;AAClB,YAAI,kBAAkB,OAAO;AACzB,4BAAkB,MAAM,KAAK,GAAG,QAAQ,IAAI,GAAG,MAAM;AAAA,QACzD;AAAA,MACJ;AACA,OAAC,aAAa,MAAM,yBAAyB,iBAAiB,OACzD,aAAa,MAAM,aAAa,YAAY,KAAK,OACjD,aAAa,kBAAkB;AACpC,mBAAa,kBAAkB,QAAQ,kBAAkB;AAAA,IAC7D,WACU,WAAW,UAAU,aAAc;AACzC,uBAAiB,KAAK,UAAU;AAChC,oBAAc,MAAM;AAChB,oBAAY,WAAW,UAAU;AAAA,MACrC;AACA,OAAC,aAAa,SAAS,wBAClB,aAAa,MAAM,aAAa,YAAY,KAAK,OACjD,aAAa,SAAS;AAC3B,UAAI,eAAe,SAAS,sBACxB,SAAS;AACb,mBAAa;AAAA,QAAmB,SAAS,uBACrC,SAAS,sBACT,gBAAgB;AAAA,QAAU,CAAC,cAAc,UAAU;AAAA,QACvD;AAAA,MAAY;AAAA,IAChB,WACS,YAAY,aAAa;AAC9B,oBAAc,MAAM;AAChB,oBAAY,YAAY;AAAA,MAC5B;AACA,OAAC,aAAa,4BAA4B,iBACrC,aAAa,MAAM,aAAa,YAAY,KAAK,OACjD,aAAa,mBAAmB;AACrC,UAAI,eAAe,cAAc,eAAe,YAAY;AACxD,YAAI,aAAa,eAAe,aAAa,SAAS;AACtD,qBAAa,mBAAmB,4BAA4B,eACxD,oBAAoB,aAAa;AAAA,UACjC,mBAAmB,QAAQ;AAAA,UAC3B;AAAA,QACJ,GAAG,mBAAmB,WAAW;AAAA,MACrC,OACK;AACD,qBAAa,CAAC,YAAY,mBAAmB,4BAA4B,eACrE,oBAAoB,aAAa;AAAA,UACjC,mBAAmB,YAAY;AAAA,UAC/B;AAAA,QACJ,GAAG,mBAAmB,WAAW;AAAA,MACrC;AAAA,IACJ;AACA,WAAO,EAAE,YAAY,aAAa,YAAY,YAAY,WAAW;AAAA,EACzE,CAAC,CAAE;AACH,SAAO,EAAE,SAAS,kBAAkB,SAAS;AACjD;AAGA,IAAM,WAAN,MAAe;AAAA,EACX,YAAY,MAAM,gBAAgB,SAAS;AACvC,SAAK,OAAO;AACZ,SAAK,iBAAiB;AACtB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,eAAe,EAAE;AAAA,EACjC;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK,eAAe,EAAE;AAAA,EACjC;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,QAAQ,OAAO,KAAK,eAAe,EAAE,YAAY,YAAY,KAAK;AAAA,EAClF;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,QAAQ,OAAO,KAAK,eAAe,EAAE,YAAY,YAAY,GAAG;AAAA,EAChF;AAAA,EACA,IAAI,eAAe;AACf,WAAO,KAAK,QAAQ,OAAO,KAAK,eAAe,EAAE,YAAY,aAAa,KAAK;AAAA,EACnF;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,QAAQ,OAAO,KAAK,eAAe,EAAE,YAAY,aAAa,GAAG;AAAA,EACjF;AAAA,EACA,UAAU,MAAM;AACZ,WAAO,KAAK,eAAe,EAAE,QAAQ;AAAA,EACzC;AACJ;AAEA,IAAI,mBAAmB;AAAA,EACnB,aAAa;AAAA,EACb,UAAU,SAAS;AACf,QAAI,MAAM,QAAQ,QAAQ,MAAM,GAAG;AAC/B,aAAO,QAAQ;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,KAAK,iBAAiB;AACxB,oBAAgB;AAAA,MACZ,WAAW,IAAI,YAAY;AAAA,IAC/B,CAAC;AAAA,EACL;AACJ;AACA,IAAM,yBAAyB,aAAa;AAAA,EACxC,MAAM;AAAA,EACN,iBAAiB,CAAC,gBAAgB;AACtC,CAAC;AAED,IAAI,mBAAmB;AAAA,EACnB,UAAU,SAAS;AACf,QAAI,OAAO,QAAQ,WAAW,YAAY;AACtC,aAAO,QAAQ;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,KAAK,iBAAiB,eAAe;AACvC,UAAM,EAAE,QAAQ,IAAI,IAAI;AACxB,UAAM,OAAO,IAAI,YAAY;AAC7B,gBAAY,KAAK,KAAK,MAAM,0BAA0B,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,cAAc,gBAAgB,EAAE,UAAU,CAAC,GAAG,aAAa;AAAA,EAC5I;AACJ;AACA,IAAM,wBAAwB,aAAa;AAAA,EACvC,MAAM;AAAA,EACN,iBAAiB,CAAC,gBAAgB;AACtC,CAAC;AAED,IAAM,kCAAkC;AAAA,EACpC,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,eAAe;AACnB;AAEA,IAAI,iBAAiB;AAAA,EACjB,UAAU,SAAS;AACf,QAAI,QAAQ,QAAQ,QAAQ,WAAW,UAAU,CAAC,QAAQ,SAAS;AAC/D,aAAO;AAAA,QACH,KAAK,QAAQ;AAAA,QACb,QAAQ;AAAA,QACR,SAAS,QAAQ,UAAU,OAAO,YAAY;AAAA,QAC9C,aAAa,QAAQ;AAAA,QACrB,YAAY,QAAQ;AAAA,QACpB,UAAU,QAAQ;AAAA,QAClB,eAAe,QAAQ;AAAA,MAC3B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,KAAK,iBAAiB,eAAe;AACvC,UAAM,EAAE,KAAK,IAAI,IAAI;AACrB,UAAM,gBAAgB,mBAAmB,MAAM,IAAI,OAAO,IAAI,OAAO;AACrE,gBAAY,KAAK,QAAQ,KAAK,KAAK,aAAa,EAAE,KAAK,CAAC,CAAC,WAAW,QAAQ,MAAM;AAC9E,sBAAgB,EAAE,WAAW,SAAS,CAAC;AAAA,IAC3C,GAAG,aAAa;AAAA,EACpB;AACJ;AACA,IAAM,4BAA4B,aAAa;AAAA,EAC3C,MAAM;AAAA,EACN,qBAAqB;AAAA,EACrB,iBAAiB,CAAC,cAAc;AACpC,CAAC;AACD,SAAS,mBAAmB,MAAM,OAAO,SAAS;AAC9C,MAAI,EAAE,SAAS,QAAQ,IAAI;AAC3B,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,SAAS,CAAC;AACd,eAAa,KAAK;AAClB,MAAI,cAAc,MAAM;AACpB,iBAAa,QAAQ;AAAA,EACzB;AACA,aAAW,KAAK;AAChB,MAAI,YAAY,MAAM;AAClB,eAAW,QAAQ;AAAA,EACvB;AACA,kBAAgB,KAAK;AACrB,MAAI,iBAAiB,MAAM;AACvB,oBAAgB,QAAQ;AAAA,EAC5B;AAEA,MAAI,OAAO,KAAK,gBAAgB,YAAY;AAExC,0BAAsB,KAAK,YAAY;AAAA,EAC3C,OACK;AAED,0BAAsB,KAAK,eAAe,CAAC;AAAA,EAC/C;AACA,SAAO,OAAO,QAAQ,mBAAmB;AACzC,SAAO,cAAc,QAAQ,UAAU,MAAM,KAAK;AAClD,SAAO,YAAY,QAAQ,UAAU,MAAM,GAAG;AAC9C,MAAI,QAAQ,aAAa,SAAS;AAC9B,WAAO,iBAAiB,QAAQ;AAAA,EACpC;AACA,SAAO;AACX;AAEA,IAAM,4BAA4B;AAAA,EAC9B,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,UAAU;AACd;AAEA,IAAI,YAAY;AAAA,EACZ,MAAM,SAAS,SAAS;AACpB,QAAI,QAAQ,cAAc,QAAQ,aAAa,QAAQ,WAAW,QAAQ,cAAc,QAAQ,UAAU;AACtG,UAAI,gBAAgB;AAAA,QAChB,YAAY,QAAQ,cAAc;AAAA,QAClC,WAAW,QAAQ,aAAa;AAAA,QAChC,SAAS,QAAQ,WAAW;AAAA,QAC5B,YAAY,QAAQ,aAAa,QAAQ,aAAa,QAAQ,UAAU,IAAI;AAAA,QAC5E,UAAU,QAAQ,WAAW,QAAQ,aAAa,QAAQ,QAAQ,IAAI;AAAA,MAC1E;AACA,UAAI;AACJ,UAAI,QAAQ,UAAU;AAClB,mBAAW,QAAQ;AAAA,MACvB;AACA,UAAI,CAAC,YAAY,QAAQ,aAAa,QAAQ,SAAS;AACnD,mBAAW,kBAAkB,QAAQ,SAAS,QAAQ,SAAS;AAAA,MACnE;AACA,aAAO;AAAA,QACH,aAAa,QAAQ,CAAC,QAAQ,aAAa,CAAC,QAAQ,OAAO;AAAA,QAC3D;AAAA,QACA,UAAU;AAAA,MACd;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,OAAO,UAAU,cAAc,SAAS;AACpC,QAAI,sBAAsB,gBAAgB,cAAc,EAAE,OAAO,SAAS,YAAY,KAAK,SAAS,SAAS,CAAC;AAC9G,QAAI,qBAAqB;AACrB,aAAO,aAAa,SAAS,YAAY,SAAS,WAAW,qBAAqB,OAAO;AAAA,IAC7F;AACA,WAAO,CAAC;AAAA,EACZ;AACJ;AACA,IAAM,8BAA8B,aAAa;AAAA,EAC7C,MAAM;AAAA,EACN,gBAAgB,CAAC,SAAS;AAAA,EAC1B,eAAe;AACnB,CAAC;AACD,SAAS,aAAa,YAAY,WAAW,cAAc,SAAS;AAChE,MAAI,UAAU,aAAa,YAAY,UAAU,IAAI;AACrD,MAAI,YAAY,WAAW,aAAa,KAAK;AAC7C,MAAI,YAAY,aAAa;AAC7B,MAAI,iBAAiB,CAAC;AACtB,SAAO,YAAY,WAAW;AAC1B,QAAI;AAEJ,QAAI,CAAC,WAAW,QAAQ,UAAU,UAAU,IAAI;AAC5C,UAAI,WAAW;AACX,wBAAgB,QAAQ,IAAI,WAAW,SAAS;AAAA,MACpD,OACK;AACD,wBAAgB;AAAA,MACpB;AACA,qBAAe,KAAK,aAAa;AAAA,IACrC;AACA,gBAAY,QAAQ,WAAW,CAAC;AAAA,EACpC;AACA,SAAO;AACX;AAEA,IAAM,sBAAsB,aAAa;AAAA,EACrC,MAAM;AAAA,EACN,sBAAsB;AAAA,IAClB,OAAO,QAAQ,SAAS;AACpB,yBAAmB,CAAC,MAAM,GAAG,OAAO;AAAA,IACxC;AAAA,IACA,cAAc;AAAA,EAClB;AACJ,CAAC;AAID,SAAS,mBAAmB,QAAQ,SAAS;AACzC,MAAI,iBAAiB,kBAAkB,QAAQ,eAAe,EAAE,YAAY;AAC5E,MAAI,eAAe,WAAW,KAC1B,OAAO,WAAW,KAClB,MAAM,QAAQ,eAAe,GAAG,IAAI,KACpC,MAAM,QAAQ,OAAO,EAAE,GAAG;AAC1B,YAAQ,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU,eAAe,GAAG;AAAA,MAC5B,WAAW,OAAO;AAAA,IACtB,CAAC;AACD;AAAA,EACJ;AACA,MAAI,YAAY,CAAC;AACjB,WAAS,SAAS,QAAQ;AACtB,QAAI,aAAa;AACjB,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK,GAAG;AAC/C,UAAI,eAAe,GAAG,SAAS,OAAO;AAClC,uBAAe,OAAO,GAAG,CAAC;AAC1B,qBAAa;AACb;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,CAAC,YAAY;AACb,gBAAU,KAAK,KAAK;AAAA,IACxB;AAAA,EACJ;AACA,WAAS,iBAAiB,gBAAgB;AACtC,YAAQ,SAAS;AAAA,MACb,MAAM;AAAA,MACN,UAAU,cAAc;AAAA,IAC5B,CAAC;AAAA,EACL;AACA,WAAS,YAAY,WAAW;AAC5B,YAAQ,YAAY,eAAe,QAAQ;AAAA,EAC/C;AACJ;AAEA,SAAS,kBAAkB,aAAa,SAAS;AAC7C,UAAQ,QAAQ,QAAQ,YAAY,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,0BAA0B,YAAY,aAAa,QAAQ,OAAO,CAAC,GAAG,EAAE,MAAM,QAAQ,QAAQ,CAAC,CAAC;AACxK;AAEA,SAAS,iBAAiB,YAAY,SAAS;AAC3C,MAAI,EAAE,QAAQ,IAAI;AAClB,MAAI,QAAQ,YAAY,WAAW,GAAG;AAClC,YAAQ,QAAQ,aAAa,eAAe,YAAY,OAAO,CAAC;AAAA,EACpE;AACJ;AAMA,IAAM,gBAAgB;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,IACT,MAAM;AAAA,IACN,gBAAgB;AAAA,MACZ,CAAC,UAAU,2BAA2B,MAAM,YAAY;AAAA,IAC5D;AAAA,IACA,iBAAiB;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,IAChB;AAAA,EACJ,CAAC;AACL;AAEA,IAAM,aAAN,MAAiB;AAAA,EACb,YAAY,eAAe,eAAe;AACtC,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,QAAQ,CAAC;AACd,SAAK,gBAAgB,IAAI,cAAc,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,EAChE;AAAA,EACA,QAAQ,MAAM,OAAO;AACjB,SAAK,MAAM,KAAK,IAAI;AACpB,SAAK,cAAc,QAAQ,KAAK;AAAA,EACpC;AAAA,EACA,MAAM,OAAO;AACT,SAAK,cAAc,MAAM,KAAK;AAAA,EAClC;AAAA,EACA,OAAO,OAAO,OAAO;AACjB,SAAK,cAAc,OAAO,OAAO,KAAK;AAAA,EAC1C;AAAA,EACA,QAAQ;AACJ,QAAI,EAAE,MAAM,IAAI;AAChB,WAAO,MAAM,QAAQ;AACjB,UAAI,iBAAiB,CAAC;AACtB,UAAI;AACJ,aAAQ,OAAO,MAAM,MAAM,GAAI;AAC3B,aAAK,QAAQ,IAAI;AACjB,uBAAe,KAAK,IAAI;AAAA,MAC5B;AACA,WAAK,QAAQ,cAAc;AAAA,IAC/B;AAAA,EACJ;AAAA,EACA,QAAQ,MAAM;AACV,QAAI,KAAK,eAAe;AACpB,WAAK,cAAc,IAAI;AAAA,IAC3B;AAAA,EACJ;AAAA,EACA,QAAQ,gBAAgB;AACpB,QAAI,KAAK,eAAe;AACpB,WAAK,cAAc,cAAc;AAAA,IACrC;AAAA,EACJ;AACJ;AAGA,SAAS,WAAW,aAAa,aAAa,SAAS;AACnD,MAAI;AAEJ,MAAI,iBAAiB,KAAK,YAAY,gBAAgB,GAAG;AACrD,YAAQ,YAAY;AAAA,EACxB,OACK;AACD,YAAQ,YAAY;AAAA,EACxB;AACA,SAAO,QAAQ,YAAY,MAAM,OAAO,MAAM,KAAK,gBAAgB,YAAY,eAAe,iBAAiB,WAAW,CAAC,GAAG;AAAA,IAC1H,gBAAgB,YAAY;AAAA,IAC5B,kBAAkB,YAAY;AAAA,EAClC,CAAC;AACL;AAGA,SAAS,iBAAiB,aAAa;AACnC,MAAI,EAAE,iBAAiB,IAAI;AAC3B,MAAI,qBAAqB,QAAQ;AAC7B,WAAO,EAAE,MAAM,UAAU;AAAA,EAC7B;AACA,MAAI,qBAAqB,SAAS;AAC9B,WAAO,EAAE,MAAM,WAAW,OAAO,OAAO;AAAA,EAC5C;AACA,MAAI,OAAO,cAAc,YAAY,aAAa,OAAO,YAAY,aAAa,GAAG;AACrF,MAAI,SAAS,QAAQ,OAAO,GAAG;AAE3B,WAAO,EAAE,MAAM,WAAW,OAAO,SAAS,KAAK,UAAU;AAAA,EAC7D;AAEA,SAAO,EAAE,MAAM,WAAW,OAAO,QAAQ,KAAK,UAAU;AAC5D;AAIA,IAAM,sBAAN,MAA0B;AAAA,EACtB,YAAY,OAAO;AACf,SAAK,yBAAyB,QAAQ,KAAK,uBAAuB;AAClE,SAAK,qBAAqB,QAAQ,kBAAkB;AACpD,SAAK,cAAc,QAAQ,WAAW;AACtC,SAAK,mBAAmB,sBAAsB;AAC9C,SAAK,eAAe,QAAQ,cAAc;AAC1C,SAAK,aAAa,QAAQ,UAAU;AACpC,SAAK,gBAAgB,QAAQ,aAAa;AAC1C,SAAK,iBAAiB,QAAQ,cAAc;AAC5C,SAAK,4BAA4B,cAAc,yBAAyB;AACxE,SAAK,eAAe,QAAQ,YAAY;AACxC,SAAK,mBAAmB,cAAc,gBAAgB;AACtD,SAAK,uBAAuB,QAAQ,sBAAsB,YAAY;AACtE,SAAK,oBAAoB,QAAQ,iBAAiB;AAClD,SAAK,4BAA4B,cAAc,yBAAyB;AACxE,SAAK,aAAa,QAAQ,UAAU;AACpC,SAAK,UAAU,IAAI,QAAQ;AAC3B,SAAK,eAAe,IAAI,WAAW,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,WAAW,KAAK,IAAI,CAAC;AAC5F,SAAK,8BAA8B,CAAC;AACpC,SAAK,gCAAgC,CAAC;AACtC,SAAK,0BAA0B,CAAC;AAChC,SAAK,4BAA4B,CAAC;AAClC,SAAK,iCAAiC,CAAC;AACvC,SAAK,qBAAqB,CAAC;AAC3B,SAAK,qBAAqB,CAAC;AAC3B,SAAK,iBAAiB,MAAM,KAAK;AACjC,SAAK,WAAW,CAAC,WAAW;AACxB,WAAK,aAAa,QAAQ,MAAM;AAAA,IACpC;AACA,SAAK,QAAQ;AACb,SAAK,aAAa,MAAM;AACxB,QAAI,yBAAyB,CAAC;AAC9B,QAAI,cAAc,KAAK,mBAAmB,MAAM,iBAAiB,wBAAwB,MAAM,WAAW;AAC1G,QAAI,kBAAkB,YAAY,gBAAgB,eAAe,YAAY,YAAY;AACzF,QAAI,kBAAkB,KAAK,uBAAuB,iBAAiB,aAAa,MAAM,iBAAiB,sBAAsB;AAG7H,UAAM,YAAY,qBAAqB;AACvC,SAAK,QAAQ,eAAe,MAAM,WAAW;AAC7C,SAAK,QAAQ,WAAW,gBAAgB,OAAO;AAC/C,QAAI,cAAc,eAAe,YAAY,iBAAiB,YAAY,OAAO;AACjF,QAAI,cAAc,gBAAgB,qBAAqB,MAAM,WAAW;AACxE,QAAI,CAAC,oBAAoB,YAAY,aAAa,WAAW,GAAG;AAC5D,oBAAc,YAAY,aAAa;AAAA,IAC3C;AACA,QAAI,kBAAkB;AAAA,MAClB,SAAS,YAAY;AAAA,MACrB,SAAS,YAAY;AAAA,MACrB,aAAa,YAAY;AAAA,MACzB,aAAa,MAAM;AAAA,MACnB,UAAU,KAAK;AAAA,MACf,SAAS,KAAK;AAAA,MACd,gBAAgB,KAAK;AAAA,IACzB;AAEA,aAAS,YAAY,YAAY,YAAY,aAAa;AACtD,eAAS,eAAe;AAAA,IAC5B;AAEA,QAAI,eAAe,iBAAiB,YAAY,iBAAiB,aAAa,eAAe;AAC7F,QAAI,eAAe;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe,KAAK,0BAA0B,eAAe;AAAA,MAC7D;AAAA,MACA,cAAc,CAAC;AAAA,MACf,YAAY,sBAAsB;AAAA,MAClC,sBAAsB,sBAAsB;AAAA,MAC5C,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,aAAa;AAAA,MACb,iBAAiB,KAAK,iBAAiB,eAAe,EAAE;AAAA,IAC5D;AACA,QAAI,kBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,eAAe,GAAG,YAAY;AACpF,aAAS,WAAW,YAAY,YAAY,UAAU;AAClD,aAAO,OAAO,cAAc,QAAQ,MAAM,MAAM,eAAe,CAAC;AAAA,IACpE;AACA,QAAI,iBAAiB,cAAc,eAAe,GAAG;AACjD,WAAK,QAAQ,QAAQ,WAAW,IAAI;AAAA,IACxC;AACA,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,aAAa,OAAO;AAAA,EAC7B;AAAA,EACA,aAAa,iBAAiB,oBAAoB;AAC9C,QAAI,EAAE,MAAM,IAAI;AAChB,QAAI,uBAAuB,QAAW;AAClC,YAAM,kBAAkB;AAAA,IAC5B,OACK;AACD,YAAM,kBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAI,MAAM,mBAAmB,CAAC,CAAE,GAAG,eAAe;AACvG,WAAK,mBAAmB,KAAK,GAAG,kBAAkB;AAAA,IACtD;AACA,QAAI,uBAAuB,UAAa,mBAAmB,QAAQ;AAC/D,WAAK,aAAa,QAAQ;AAAA,QACtB,MAAM;AAAA,MACV,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACA,cAAc,QAAQ;AAClB,QAAI,EAAE,OAAO,OAAO,QAAQ,IAAI;AAChC,QAAI,yBAAyB,6BAA6B,MAAM,wBAAwB,MAAM;AAC9F,QAAI,cAAc,KAAK,mBAAmB,MAAM,iBAAiB,wBAAwB,MAAM,WAAW;AAC1G,QAAI,kBAAkB,eAAe,MAAM,iBAAiB,MAAM;AAClE,QAAI,kBAAkB,KAAK,uBAAuB,iBAAiB,aAAa,MAAM,iBAAiB,sBAAsB;AAG7H,UAAM,YAAY,qBAAqB;AACvC,YAAQ,eAAe,MAAM,WAAW;AACxC,YAAQ,WAAW,gBAAgB,OAAO;AAC1C,QAAI,kBAAkB;AAAA,MAClB,SAAS,YAAY;AAAA,MACrB,SAAS,YAAY;AAAA,MACrB,aAAa,YAAY;AAAA,MACzB,aAAa,MAAM;AAAA,MACnB,UAAU,KAAK;AAAA,MACf;AAAA,MACA,gBAAgB,KAAK;AAAA,IACzB;AACA,QAAI,EAAE,aAAa,YAAY,IAAI;AACnC,QAAI,KAAK,QAAQ,KAAK,KAAK,yBAAyB,gBAAgB,sBAAsB;AACtF,oBAAc,gBAAgB,qBAAqB,MAAM,WAAW;AAAA,IACxE;AACA,kBAAc,kBAAkB,aAAa,MAAM;AACnD,kBAAc,kBAAkB,aAAa,QAAQ,aAAa,gBAAgB,oBAAoB;AACtG,QAAI,OAAO,SAAS,UAChB,OAAO,SAAS,UAChB,CAAC,oBAAoB,YAAY,cAAc,WAAW,GAAG;AAC7D,oBAAc,YAAY,aAAa;AAAA,IAC3C;AACA,QAAI,eAAe,mBAAmB,MAAM,cAAc,QAAQ,aAAa,eAAe;AAC9F,QAAI,aAAa,iBAAiB,MAAM,YAAY,QAAQ,cAAc,aAAa,eAAe;AACtG,QAAI,kBAAkB,2BAA2B,YAAY;AAC7D,QAAI,uBAAwB,mBAAmB,CAAC,gBAAgB,QAAQ,4BACnE,MAAM,wBAAwB,aAC/B;AACJ,QAAI,EAAE,mBAAmB,gBAAgB,IAAI,KAAK,iBAAiB,eAAe;AAClF,QAAI,kBAAkB,KAAK,qBAAqB,YAAY;AAC5D,QAAI,eAAe,KAAK,kBAAkB,qBAAqB,MAAM,mBAAmB,eAAe;AACvG,QAAI,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe,KAAK,0BAA0B,eAAe;AAAA,MAC7D,eAAe,oBAAoB,MAAM,eAAe,MAAM;AAAA,MAC9D,gBAAgB,oBAAoB,MAAM,gBAAgB,MAAM;AAAA,MAChE,WAAW,gBAAgB,MAAM,WAAW,MAAM;AAAA,MAClD,aAAa,kBAAkB,MAAM,aAAa,MAAM;AAAA,IAC5D;AACA,QAAI,kBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,eAAe,GAAG,QAAQ;AAChF,aAAS,WAAW,YAAY,YAAY,UAAU;AAClD,aAAO,OAAO,UAAU,QAAQ,OAAO,QAAQ,eAAe,CAAC;AAAA,IACnE;AACA,QAAI,aAAa,iBAAiB,OAAO,eAAe;AACxD,QAAI,YAAY,iBAAiB,UAAU,eAAe;AAE1D,QAAI,CAAC,cAAc,WAAW;AAC1B,cAAQ,QAAQ,WAAW,IAAI;AAAA,IACnC,WACS,cAAc,CAAC,WAAW;AAC/B,cAAQ,QAAQ,WAAW,KAAK;AAAA,IACpC;AACA,SAAK,QAAQ;AACb,QAAI,MAAM,UAAU;AAChB,YAAM,SAAS,MAAM;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,aAAa;AACT,QAAI,EAAE,OAAO,MAAM,IAAI;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,cAAc,KAAK,mBAAmB,MAAM,iBAAiB,MAAM,wBAAwB,MAAM,WAAW;AAChH,QAAI,kBAAkB,KAAK,uBAAuB,MAAM,iBAAiB,aAAa,MAAM,iBAAiB,MAAM,sBAAsB;AACzI,QAAI,OAAO,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,EAAE,WAAW,KAAK,WAAW,MAAM,aAAa,gBAAgB,SAAS,YAAY,OAAO,GAAG,aAAa,MAAM,aAAa,UAAU,KAAK,UAAU,SAAS,KAAK,SAAS,gBAAgB,KAAK,eAAe,GAAG,WAAW,GAAG,eAAe,GAAG,KAAK;AAC5T,QAAI,iBAAiB,YAAY,YAAY;AAC7C,QAAI,qBAAqB,WAAW,QAAQ;AAC5C,QAAI,qBAAqB,YAAY;AACrC,QAAI,sBAAsB,uBAAuB,oBAAoB;AACjE,UAAI,mBAAmB,aAAa,mBAAmB,UAAU;AAE7D,cAAM,eAAe,KAAK,eAAe,8BAA8B,KAAK,cAAc,MAAM,aAAa,IAAI;AACjH,cAAM,aAAa,KAAK,aAAa,sBAAsB,KAAK,YAAY,QAAQ,SAAS,KAAK,OAAO;AACzG,cAAM,uBAAuB,KAAK,uBAAuB,sBAAsB,KAAK,sBAAsB,QAAQ,SAAS,KAAK,OAAO;AAAA,MAC3I;AACA,eAAS,cAAc,gBAAgB;AACnC,YAAI,KAAK,mBAAmB,QAAQ,UAAU,MAAM,MAChD,mBAAmB,gBAAgB,mBAAmB,aAAa;AACnE,yBAAe,YAAY,mBAAmB,aAAa,IAAI;AAAA,QACnE;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,qBAAqB,CAAC;AAC3B,QAAI,MAAM,QAAQ;AACd,YAAM,OAAO,IAAI;AAAA,IACrB;AAAA,EACJ;AAAA,EACA,mBAAmB,iBAAiB,wBAAwB,aAAa;AAErE,QAAI,CAAC,KAAK,mBAAmB,UACzB,oBAAoB,KAAK,yBACzB,2BAA2B,KAAK,8BAA8B;AAC9D,aAAO,KAAK;AAAA,IAChB;AACA,QAAI,EAAE,gBAAgB,aAAa,gBAAgB,qBAAqB,MAAO,IAAI,KAAK,0BAA0B,iBAAiB,sBAAsB;AACzJ,uBAAmB,KAAK;AACxB,QAAI,UAAU,KAAK,aAAa,eAAe,UAAU,eAAe,QAAQ,eAAe,uBAAuB,eAAe,UAAU,eAAe,UAAU,aAAa,qBAAqB,eAAe,qBAAqB;AAC9O,QAAI,YAAY,KAAK,eAAe,YAAY,OAAO,KAAK,uBAAuB,KAAK,8BAA8B,cAAc;AACpI,QAAI,QAAQ,KAAK,WAAW,gBAAgB,WAAW;AACvD,QAAI,gBAAgB,KAAK,cAAc,gBAAgB,KAAK,uBAAuB,OAAO,WAAW,WAAW;AAChH,WAAO,KAAK,4BAA4B;AAAA,MACpC,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,qBAAqB,oBAAoB;AAAA,IAC7C;AAAA,EACJ;AAAA,EAEA,0BAA0B,iBAAiB,wBAAwB;AAC/D,QAAI,EAAE,SAAS,OAAO,IAAI,gBAAgB;AAAA,MACtC;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,QAAI,sBAAsB,KAAK,mBAAmB,OAAO;AACzD,QAAI,sBAAsB,oBAAoB;AAC9C,QAAI,iBAAiB,KAAK,YAAY,UAAU,oBAAoB,aAAa,mBAAmB,EAAE;AACtG,QAAI,cAAc,KAAK,iBAAiB,gBAAgB,WAAW,CAAC,GAAG,aAAa;AACpF,QAAI,WAAW,KAAK,iCAAiC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,oBAAoB,GAAG,0BAA0B,GAAG,wBAAwB,GAAG,YAAY,gBAAgB,GAAG,YAAY,cAAc;AACvQ,QAAI,QAAQ,CAAC;AACb,QAAI,MAAM,gBAAgB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,QAAI,UAAU,CAAC;AACf,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,aAAa;AACjB,aAAS,cAAc,KAAK;AACxB,UAAI,KAAK,mBAAmB,QAAQ,UAAU,MAAM,OAAO,IAAI,gBAAgB,WAAW,eAAgB,2BAA2B,eAChI,cAAc,cACf,2BAA2B,YAAY,WAAW,aAAa,IAAI,WAAW,IAAK;AACnF,gBAAQ,cAAc,eAAe;AAAA,MACzC,WACS,SAAS,aAAa;AAC3B,gBAAQ,cAAc,SAAS,YAAY,IAAI,WAAW;AAC1D,qBAAa;AAAA,MACjB,OACK;AACD,cAAM,cAAc,WAAW;AAAA,MACnC;AAAA,IACJ;AACA,QAAI,YAAY;AACZ,WAAK,8BAA8B;AACnC,WAAK,gCAAgC;AACrC,WAAK,wBAAwB;AAC7B,WAAK,+BAA+B;AAAA,IACxC;AACA,SAAK,mBAAmB,KAAK,GAAG,KAAK,kBAAkB;AACvD,SAAK,qBAAqB,CAAC;AAC3B,WAAO;AAAA,MACH,YAAY,KAAK;AAAA,MACjB,gBAAgB,KAAK;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,wBAAwB,UAAU,aAAa,iBAAiB,wBAAwB;AACpF,QAAI,WAAW,YAAY,UAAU;AACrC,QAAI,CAAC,UAAU;AACX,YAAM,IAAI,MAAM,aAAa,mFAAmF;AAAA,IACpH;AACA,QAAI,EAAE,gBAAgB,MAAM,IAAI,KAAK,sBAAsB,UAAU,YAAY,aAAa,YAAY,gBAAgB,iBAAiB,sBAAsB;AACjK,uBAAmB,KAAK;AACxB,QAAI,uBAAuB,KAAK,0BAA0B;AAAA,MACtD,2BAA2B,SAAS,eAAe;AAAA,MACnD,UAAU,SAAS;AAAA,MACnB,cAAc,SAAS;AAAA,MACvB,gBAAgB,SAAS,eAAe;AAAA,MACxC,SAAS,YAAY;AAAA,MACrB,aAAa,KAAK,MAAM;AAAA,MACxB,aAAa,eAAe;AAAA,MAC5B,aAAa,eAAe;AAAA,MAC5B,qBAAqB,eAAe;AAAA,MACpC,UAAU,eAAe;AAAA,MACzB,eAAe,eAAe;AAAA,MAC9B,eAAe,eAAe;AAAA,MAC9B,YAAY,eAAe;AAAA,MAC3B,UAAU,eAAe;AAAA,MACzB,UAAU,eAAe;AAAA,MACzB,iBAAiB,eAAe;AAAA,MAChC,mBAAmB,eAAe;AAAA,MAClC,gBAAgB,eAAe;AAAA,IACnC,CAAC;AACD,QAAI,UAAU,KAAK,aAAa,UAAU,KAAK,gBAAgB,YAAY,OAAO;AAClF,WAAO,EAAE,UAAU,SAAS,gBAAgB,sBAAsB,QAAQ;AAAA,EAC9E;AAAA,EACA,sBAAsB,UAAU,aAAa,gBAAgB,iBAAiB,wBAAwB;AAClG,QAAI,MAAM,gBAAgB;AAAA,MACtB;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACJ,CAAC;AACD,QAAI,WAAW,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,oBAAoB,GAAG,0BAA0B,GAAG,wBAAwB,GAAG,oBAAoB,GAAG,YAAY,gBAAgB,GAAG,YAAY,cAAc;AACtQ,QAAI,UAAU,CAAC;AACf,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,aAAa;AACjB,QAAI,QAAQ,CAAC;AACb,aAAS,cAAc,KAAK;AACxB,UAAI,IAAI,gBAAgB,WAAW,eAC9B,2BAA2B,eACxB,2BAA2B,YAAY,IAAI,aAAa,WAAW,WAAW,GAAI;AACtF,gBAAQ,cAAc,eAAe;AAAA,MACzC,OACK;AACD,YAAI,IAAI,gBAAgB,KAAK,4BAA4B,eACpD,2BAA2B,eACxB,2BAA2B,YAAY,IAAI,aAAa,KAAK,4BAA4B,WAAW,GAAI;AAC5G,cAAI,cAAc,KAAK,+BAA+B;AAClD,oBAAQ,cAAc,KAAK,8BAA8B;AAAA,UAC7D;AAAA,QACJ,WACS,SAAS,aAAa;AAC3B,kBAAQ,cAAc,SAAS,YAAY,IAAI,WAAW;AAAA,QAC9D,OACK;AACD,gBAAM,cAAc,IAAI;AAAA,QAC5B;AACA,qBAAa;AAAA,MACjB;AAAA,IACJ;AACA,QAAI,YAAY;AACZ,WAAK,0BAA0B;AAC/B,WAAK,4BAA4B;AAAA,IACrC;AACA,WAAO;AAAA,MACH,YAAY,KAAK;AAAA,MACjB,gBAAgB,KAAK;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,eAAe,UAAU,gBAAgB,uBAAuB,UAAU,UAAU,aAAa,qBAAqB,kBAAkB;AAC7I,MAAI,SAAS,YAAY,kBAAkB,oBAAoB,aAAa,oBAAoB,GAAG;AACnG,SAAO,IAAI,QAAQ;AAAA,IACf,gBAAgB;AAAA,IAChB;AAAA,IACA,mBAAmB,YAAY;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc,YAAY;AAAA,IAC1B;AAAA,EACJ,CAAC;AACL;AACA,SAAS,WAAW,SAAS,aAAa;AACtC,MAAI,aAAa,YAAY,aAAa,QAAQ,gBAAgB;AAClE,SAAO,IAAI,WAAW,OAAO;AACjC;AACA,SAAS,0BAA0B,OAAO;AACtC,MAAI,4BAA4B,MAAM,6BAA6B;AACnE,SAAO,IAAI,0BAA0B,KAAK;AAC9C;AACA,SAAS,aAAa,MAAM,gBAAgB,SAAS;AACjD,SAAO,IAAI,SAAS,MAAM,gBAAgB,OAAO;AACrD;AACA,SAAS,qBAAqB,cAAc;AACxC,SAAO,QAAQ,cAAc,CAAC,gBAAgB,YAAY,EAAE;AAChE;AACA,SAAS,kBAAkB,WAAW,mBAAmB,iBAAiB;AACtE,MAAI,eAAe,EAAE,IAAI,kBAAkB;AAC3C,WAAS,SAAS,WAAW;AACzB,QAAI,MAAM,UAAU;AACpB,QAAI,IAAI,YAAY,gBAAgB,IAAI,WAAW;AAC/C,mBAAa,SAAS,gBAAgB,IAAI;AAAA,IAC9C;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,iBAAiB,iBAAiB;AACvC,MAAI,EAAE,QAAQ,IAAI;AAClB,SAAO;AAAA,IACH,mBAAmB,cAAc;AAAA,MAC7B,SAAS,QAAQ;AAAA,MACjB,UAAU,QAAQ;AAAA,MAClB,eAAe,QAAQ;AAAA,MACvB,kBAAkB,QAAQ;AAAA,MAC1B,YAAY,QAAQ;AAAA,MACpB,SAAS,OAAO,QAAQ,iBAAiB,YAAY,QAAQ,eAAe;AAAA,MAC5E,OAAO,QAAQ;AAAA,MACf,iBAAiB,QAAQ;AAAA,MACzB,aAAa,QAAQ;AAAA,MACrB,WAAW,QAAQ;AAAA,MACnB,OAAO,QAAQ;AAAA,IAEnB,GAAG,eAAe;AAAA,IAClB,iBAAiB,cAAc;AAAA,MAC3B,YAAY,QAAQ;AAAA,MACpB,SAAS,OAAO,QAAQ,kBAAkB,YAAY,QAAQ,gBAAgB;AAAA,MAC9E,OAAO,QAAQ;AAAA,IACnB,GAAG,eAAe;AAAA,EACtB;AACJ;AACA,SAAS,iBAAiB,OAAO,SAAS;AACtC,WAAS,iBAAiB,QAAQ,YAAY,gBAAgB;AAC1D,QAAI,cAAc,KAAK,GAAG;AACtB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,0BAA0B,iBAAiB;AAChD,SAAO,mBAAmB,gBAAgB,QAAQ,eAAe,eAAe;AACpF;AACA,SAAS,mBAAmB,SAAS,UAAU;AAC3C,WAAS,cAAc,SAAS;AAC5B,YAAQ,KAAK,mBAAmB,iBAC3B,WAAW,cAAc,cAAc,GAAG;AAAA,EACnD;AACJ;AAEA,IAAM,iBAAN,cAA6B,cAAc;AAAA,EACvC,SAAS;AACL,QAAI,WAAW,KAAK,MAAM,aAAa,IAAI,CAAC,gBAAgB,KAAK,kBAAkB,WAAW,CAAC;AAC/F,WAAO,EAAc,OAAO,EAAE,WAAW,mBAAmB,GAAG,GAAG,QAAQ;AAAA,EAC9E;AAAA,EACA,kBAAkB,aAAa;AAC3B,QAAI,EAAE,MAAM,IAAI;AAChB,QAAI,EAAE,MAAM,IAAI,KAAK;AACrB,QAAI,WAAW,CAAC;AAChB,QAAI,gBAAgB;AACpB,aAAS,UAAU,aAAa;AAC5B,UAAI,EAAE,YAAY,aAAa,YAAY,YAAY,WAAW,IAAI;AACtE,UAAI,eAAe,SAAS;AACxB,wBAAgB;AAChB,iBAAS,KAAK,EAAc,MAAM,EAAE,WAAW,oBAAoB,IAAI,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC;AAAA,MACxG,OACK;AACD,YAAI,YAAY,eAAe,MAAM;AACrC,YAAI,aAAc,CAAC,MAAM,kBAAkB,eAAe,WACrD,CAAC,MAAM,iBAAiB,eAAe,UACvC,CAAC,MAAM,iBAAiB,eAAe;AAC5C,YAAI,gBAAgB,CAAC,MAAM,qBAAqB,MAAM,SAAS,QAAQ,CAAC;AACxE,YAAI,WAAW;AACX,wBAAc,KAAK,MAAM,SAAS,cAAc,CAAC;AAAA,QACrD;AACA,iBAAS,KAAK,EAAc,UAAU,EAAE,MAAM,UAAU,OAAO,OAAO,eAAe,aAAa,WAAW,MAAM,OAAO,IAAI,YAAY,UAAU,YAAY,gBAAgB,WAAW,WAAW,cAAc,KAAK,GAAG,GAAG,SAAS,YAAY,GAAG,eAAe,aAAa,EAAc,QAAQ,EAAE,WAAW,WAAW,CAAC,IAAI,GAAG,CAAC;AAAA,MAC9U;AAAA,IACJ;AACA,QAAI,SAAS,SAAS,GAAG;AACrB,UAAI,iBAAkB,iBAAiB,MAAM,SAAS,aAAa,KAAM;AACzE,aAAO,EAAc,OAAO,EAAE,WAAW,eAAe,GAAG,GAAG,QAAQ;AAAA,IAC1E;AACA,WAAO,SAAS;AAAA,EACpB;AACJ;AAEA,IAAM,UAAN,cAAsB,cAAc;AAAA,EAChC,SAAS;AACL,QAAI,EAAE,OAAO,eAAe,IAAI,KAAK;AACrC,QAAI,WAAW;AACf,QAAI;AACJ,QAAI;AACJ,QAAI,iBAAiB,MAAM;AAC3B,QAAI,gBAAgB,eAAe;AACnC,QAAI,eAAe,MAAM;AACrB,iBAAW;AACX,qBAAe,eAAe;AAAA,IAClC,OACK;AACD,qBAAe,eAAe;AAAA,IAClC;AACA,QAAI,eAAe,OAAO;AACtB,iBAAW;AACX,mBAAa,eAAe;AAAA,IAChC,OACK;AACD,mBAAa,eAAe;AAAA,IAChC;AACA,QAAI,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB;AAAA,MACA,WAAW,mBAAmB;AAAA,IAClC;AACA,WAAQ;AAAA,MAAc;AAAA,MAAO,EAAE,WAAW,WAAW,KAAK,GAAG,EAAE;AAAA,MAC3D,KAAK,cAAc,SAAS,gBAAgB,CAAC,CAAC;AAAA,MAC9C,KAAK,cAAc,UAAU,iBAAiB,CAAC,CAAC;AAAA,MAChD,KAAK,cAAc,OAAO,cAAc,CAAC,CAAC;AAAA,IAAC;AAAA,EACnD;AAAA,EACA,cAAc,KAAK,cAAc;AAC7B,QAAI,EAAE,MAAM,IAAI;AAChB,WAAQ,EAAc,gBAAgB,EAAE,KAAU,cAA4B,OAAO,MAAM,OAAO,SAAS,MAAM,SAAS,cAAc,MAAM,cAAc,gBAAgB,MAAM,gBAAgB,eAAe,MAAM,eAAe,eAAe,MAAM,eAAe,SAAS,MAAM,QAAQ,CAAC;AAAA,EACtS;AACJ;AAEA,IAAM,cAAN,cAA0B,cAAc;AAAA,EACpC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,QAAQ;AAAA,MACT,gBAAgB;AAAA,IACpB;AACA,SAAK,WAAW,CAAC,OAAO;AACpB,WAAK,KAAK;AACV,aAAO,KAAK,MAAM,OAAO,EAAE;AAC3B,WAAK,qBAAqB;AAAA,IAC9B;AACA,SAAK,eAAe,MAAM;AACtB,WAAK,qBAAqB;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,SAAS;AACL,QAAI,EAAE,OAAO,MAAM,IAAI;AACvB,QAAI,EAAE,YAAY,IAAI;AACtB,QAAI,aAAa;AAAA,MACb;AAAA,MACC,eAAe,MAAM,UAAU,MAAM,SAChC,2BACA;AAAA,IACV;AACA,QAAI,SAAS;AACb,QAAI,gBAAgB;AACpB,QAAI,aAAa;AACb,UAAI,MAAM,mBAAmB,MAAM;AAC/B,iBAAS,MAAM,iBAAiB;AAAA,MACpC,OACK;AAKD,wBAAgB,GAAI,IAAI,cAAe;AAAA,MAC3C;AAAA,IACJ,OACK;AACD,eAAS,MAAM,UAAU;AAAA,IAC7B;AACA,WAAQ,EAAc,OAAO,EAAE,mBAAmB,MAAM,aAAa,KAAK,KAAK,UAAU,WAAW,WAAW,KAAK,GAAG,GAAG,OAAO,EAAE,QAAQ,cAAc,EAAE,GAAG,MAAM,QAAQ;AAAA,EAChL;AAAA,EACA,oBAAoB;AAChB,SAAK,QAAQ,iBAAiB,KAAK,YAAY;AAAA,EACnD;AAAA,EACA,uBAAuB;AACnB,SAAK,QAAQ,oBAAoB,KAAK,YAAY;AAAA,EACtD;AAAA,EACA,uBAAuB;AACnB,QAAI,KAAK,MACL,KAAK,MAAM,aACb;AACE,WAAK,SAAS,EAAE,gBAAgB,KAAK,GAAG,YAAY,CAAC;AAAA,IACzD;AAAA,EACJ;AACJ;AAKA,IAAM,gBAAN,cAA4B,YAAY;AAAA,EACpC,YAAY,UAAU;AAClB,UAAM,QAAQ;AACd,SAAK,iBAAiB,CAAC,IAAI,UAAU;AACjC,UAAI,EAAE,UAAU,IAAI;AACpB,UAAI,EAAE,QAAQ,IAAI;AAClB,UAAI,MAAM,SAAS,KAAK;AACxB,UAAI,OACA,UAAU,iBAAiB,GAAG,MAAM,GAAG;AAGvC,YAAI,kBAAkB,eAAe,GAAG,QAAQ,sBAAsB;AACtE,YAAI,MAAM,kBAAkB,gBAAgB,cAAc,SAAS,EAAE,OAAO;AAC5E,gBAAQ,QAAQ,QAAQ,cAAc;AAAA,UAClC,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,UAAU,SAAS,IAAI,WAAW,KAAK,IAAI,WAAW,QAAQ;AAAA,UACnF,SAAS;AAAA,UACT,MAAM,QAAQ;AAAA,QAClB,CAAC;AACD,YAAI,OAAO,CAAC,GAAG,kBAAkB;AAC7B,iBAAO,SAAS,OAAO;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,UAAU;AAAA,MAAiB,SAAS;AAAA,MAAI;AAAA,MAAS;AAAA,MACtD,KAAK;AAAA,IAAc;AAAA,EACvB;AACJ;AAMA,IAAM,gBAAN,cAA4B,YAAY;AAAA,EACpC,YAAY,UAAU;AAClB,UAAM,QAAQ;AAEd,SAAK,sBAAsB,CAAC,OAAO;AAC/B,UAAI,OAAO,KAAK,cAAc;AAC1B,aAAK,eAAe,MAAM,KAAK,YAAY;AAAA,MAC/C;AAAA,IACJ;AACA,SAAK,iBAAiB,CAAC,IAAI,UAAU;AACjC,UAAI,SAAS,KAAK,GAAG;AACjB,aAAK,eAAe;AACpB,aAAK,aAAa,mBAAmB,IAAI,KAAK;AAAA,MAClD;AAAA,IACJ;AACA,SAAK,iBAAiB,CAAC,IAAI,UAAU;AACjC,UAAI,KAAK,cAAc;AACnB,aAAK,eAAe;AACpB,aAAK,aAAa,mBAAmB,IAAI,KAAK;AAAA,MAClD;AAAA,IACJ;AACA,SAAK,uBAAuB;AAAA,MAAwB,SAAS;AAAA,MAAI;AAAA,MACjE,KAAK;AAAA,MAAgB,KAAK;AAAA,IAAc;AAAA,EAC5C;AAAA,EACA,UAAU;AACN,SAAK,qBAAqB;AAAA,EAC9B;AAAA,EACA,aAAa,cAAc,IAAI,OAAO;AAClC,QAAI,EAAE,UAAU,IAAI;AACpB,QAAI,EAAE,QAAQ,IAAI;AAClB,QAAI,MAAM,SAAS,KAAK;AACxB,QAAI,CAAC,MAAM,UAAU,iBAAiB,GAAG,MAAM,GAAG;AAC9C,cAAQ,QAAQ,QAAQ,cAAc;AAAA,QAClC,IAAI;AAAA,QACJ,OAAO,IAAI,UAAU,SAAS,IAAI,WAAW,KAAK,IAAI,WAAW,QAAQ;AAAA,QACzE,SAAS;AAAA,QACT,MAAM,QAAQ;AAAA,MAClB,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;AAEA,IAAM,kBAAN,cAA8B,cAAc;AAAA,EACxC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,mBAAmB,QAAQ,gBAAgB;AAChD,SAAK,4BAA4B,QAAQ,yBAAyB;AAClE,SAAK,oBAAoB,QAAQ,iBAAiB;AAClD,SAAK,YAAY,EAAU;AAC3B,SAAK,YAAY,EAAU;AAC3B,SAAK,oBAAoB,CAAC;AAE1B,SAAK,QAAQ;AAAA,MACT,aAAa,eAAe;AAAA,IAChC;AAGA,SAAK,+BAA+B,CAAC,WAAW,kBAAkB;AAC9D,UAAI,WAAW,yBAAyB,WAAW,aAAa;AAChE,UAAI,uBAAuB;AAAA,QACvB;AAAA,QACA;AAAA,MACJ;AACA,UAAI,qBAAqB,qBAAqB,OAAO,KAAK,MAAM,YAAY,qBAAqB;AACjG,UAAI,eAAe,mBAAmB,IAAI,CAAC,wBAAwB,IAAI,oBAAoB,QAAQ,CAAC;AACpG,WAAK,kBAAkB,UAAU,OAAO;AACxC,+BAAyB,UAAU,OAAO;AAAA,IAC9C;AACA,SAAK,iCAAiC,CAAC,cAAc;AACjD,UAAI,YAAY,KAAK,kBAAkB,UAAU;AACjD,UAAI,WAAW;AACX,iBAAS,YAAY,WAAW;AAC5B,mBAAS,QAAQ;AAAA,QACrB;AACA,eAAO,KAAK,kBAAkB,UAAU;AAAA,MAC5C;AACA,aAAO,yBAAyB,UAAU;AAAA,IAC9C;AAGA,SAAK,eAAe,IAAI,cAAc,MAAM;AACxC,WAAK,MAAM,QAAQ,QAAQ,WAAW,IAAI;AAC1C,WAAK,MAAM,QAAQ,QAAQ,gBAAgB,EAAE,MAAM,KAAK,MAAM,QAAQ,CAAC;AAAA,IAC3E,CAAC;AACD,SAAK,qBAAqB,CAAC,OAAO;AAC9B,UAAI,EAAE,QAAQ,IAAI,KAAK;AACvB,UAAI,QAAQ,sBACR,GAAG,WAAW,QAChB;AACE,aAAK,aAAa,QAAQ,QAAQ,iBAAiB;AAAA,MACvD;AAAA,IACJ;AAAA,EACJ;AAAA,EAIA,SAAS;AACL,QAAI,EAAE,MAAM,IAAI;AAChB,QAAI,EAAE,eAAe,QAAQ,IAAI;AACjC,QAAI,eAAe,KAAK;AAAA,MAAkB,MAAM;AAAA,MAAU,MAAM;AAAA,MAAa,MAAM;AAAA,MAAsB,MAAM;AAAA,MAAa,OAAO,MAAM,QAAQ,KAAK,MAAM,OAAO;AAAA,MACnK,MAAM;AAAA,IAAS;AACf,QAAI,YAAY;AAChB,QAAI,aAAa;AACjB,QAAI;AACJ,QAAI,MAAM,gBAAgB,MAAM,UAAU;AACtC,mBAAa;AAAA,IACjB,WACS,QAAQ,UAAU,MAAM;AAC7B,kBAAY;AAAA,IAChB,WACS,QAAQ,iBAAiB,MAAM;AACpC,mBAAa,QAAQ;AAAA,IACzB,OACK;AACD,wBAAkB,KAAK,IAAI,QAAQ,aAAa,GAAG;AAAA,IACvD;AACA,QAAI,cAAc,KAAK,iBAAiB,MAAM,UAAU,MAAM,SAAS,MAAM,SAAS,MAAM,sBAAsB,MAAM,SAAS,MAAM,OAAO,MAAM,aAAa,MAAM,UAAU,MAAM,gBAAgB,MAAM,SAAS,MAAM,aAAa,KAAK,8BAA8B,KAAK,8BAA8B;AAC/S,QAAI,cAAe,cAAc,UAAU,cAAc,OAAO,WAC1D,KAAK,MAAM,cACX;AACN,WAAQ;AAAA,MAAc,gBAAgB;AAAA,MAAU,EAAE,OAAO,YAAY;AAAA,MACjE,cAAc,UAAW,EAAc,SAAS,OAAO,OAAO,EAAE,KAAK,KAAK,WAAW,gBAAgB,qBAAqB,OAAO,cAAc,QAAQ,SAAS,YAAY,GAAG,YAAY,CAAC;AAAA,MAC5L;AAAA,QAAc;AAAA,QAAa,EAAE,QAAQ,WAAW,QAAQ,YAAY,aAAa,iBAAiB,aAAa,YAAY;AAAA,QACvH,KAAK,WAAW,KAAK;AAAA,QACrB,KAAK,mBAAmB;AAAA,MAAC;AAAA,MAC7B,cAAc,UAAW,EAAc,SAAS,OAAO,OAAO,EAAE,KAAK,KAAK,WAAW,gBAAgB,qBAAqB,OAAO,cAAc,QAAQ,SAAS,GAAG,GAAG,YAAY,CAAC;AAAA,IAAE;AAAA,EAC7L;AAAA,EACA,oBAAoB;AAChB,QAAI,EAAE,MAAM,IAAI;AAChB,SAAK,uBAAuB,MAAM,YAAY,qBACzC,IAAI,CAAC,6BAA6B,IAAI,yBAAyB,KAAK,CAAC;AAC1E,WAAO,iBAAiB,UAAU,KAAK,kBAAkB;AACzD,QAAI,EAAE,gBAAgB,IAAI,MAAM;AAChC,aAAS,YAAY,iBAAiB;AAClC,sBAAgB,UAAU,MAAM,WAAW,KAAK;AAAA,IACpD;AAAA,EACJ;AAAA,EACA,mBAAmB,WAAW;AAC1B,QAAI,EAAE,MAAM,IAAI;AAChB,QAAI,EAAE,gBAAgB,IAAI,MAAM;AAChC,aAAS,YAAY,iBAAiB;AAClC,UAAI,MAAM,cAAc,UAAU,WAAW;AACzC,wBAAgB,UAAU,MAAM,WAAW,KAAK;AAAA,MACpD;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,uBAAuB;AACnB,WAAO,oBAAoB,UAAU,KAAK,kBAAkB;AAC5D,SAAK,aAAa,MAAM;AACxB,aAAS,eAAe,KAAK,sBAAsB;AAC/C,kBAAY,QAAQ;AAAA,IACxB;AACA,SAAK,MAAM,QAAQ,QAAQ,UAAU;AAAA,EACzC;AAAA,EACA,qBAAqB;AACjB,QAAI,EAAE,MAAM,IAAI;AAChB,QAAI,WAAW,MAAM,YAAY,qBAAqB,IAAI,CAAC,uBAAuB,mBAAmB,KAAK,CAAC;AAC3G,WAAO,EAAc,GAAU,CAAC,GAAG,GAAG,QAAQ;AAAA,EAClD;AAAA,EACA,WAAW,OAAO;AACd,QAAI,EAAE,YAAY,IAAI;AACtB,QAAI,EAAE,SAAS,IAAI;AACnB,QAAI,YAAY;AAAA,MACZ,aAAa,MAAM;AAAA,MACnB,eAAe,MAAM;AAAA,MACrB,YAAY,MAAM;AAAA,MAClB,cAAc,MAAM;AAAA,MACpB,eAAe,MAAM;AAAA,MACrB,gBAAgB,MAAM;AAAA,MACtB,WAAW,MAAM;AAAA,MACjB,aAAa,MAAM;AAAA,MACnB,cAAc,MAAM;AAAA,MACpB,UAAU,MAAM;AAAA,IACpB;AACA,QAAI,eAAe,KAAK,0BAA0B,YAAY,qBAAqB;AACnF,aAAS,eAAe,cAAc;AAClC,aAAO,OAAO,WAAW,YAAY,UAAU,WAAW,KAAK,CAAC;AAAA,IACpE;AACA,QAAI,gBAAgB,SAAS;AAC7B,WAAQ,EAAc,eAAe,OAAO,OAAO,CAAC,GAAG,SAAS,CAAC;AAAA,EACrE;AACJ;AACA,SAAS,kBAAkB,UAAU,aAAa,sBAAsB,aAAa,KAAK,OAAO;AAE7F,MAAI,YAAY,qBAAqB,MAAM,KAAK,QAAW,KAAK;AAChE,MAAI,WAAW,qBAAqB,UAAU,aAAa,aAAa,KAAK;AAC7E,MAAI,WAAW,qBAAqB,UAAU,aAAa,aAAa,KAAK;AAC7E,SAAO;AAAA,IACH;AAAA,IACA,cAAc,SAAS;AAAA,IACvB,SAAS,SAAS;AAAA,IAClB,gBAAgB,UAAU,WAAW,CAAC,oBAAoB,YAAY,cAAc,GAAG;AAAA,IACvF,eAAe,SAAS;AAAA,IACxB,eAAe,SAAS;AAAA,EAC5B;AACJ;AAGA,SAAS,0BAA0B,YAAY;AAC3C,SAAO,WAAW,IAAI,CAAC,aAAa,IAAI,SAAS,CAAC;AACtD;AAEA,IAAM,WAAN,cAAuB,aAAa;AAAA,EAChC,YAAY,IAAI,kBAAkB,CAAC,GAAG;AAClC,UAAM;AACN,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,oBAAoB,CAAC;AAC1B,SAAK,wBAAwB;AAC7B,SAAK,eAAe,CAAC,WAAW;AAE5B,cAAQ,OAAO;AAAA,aACN;AAAA,aACA;AACD,eAAK,aAAa,SAAS;AAAA;AAAA,IAEvC;AACA,SAAK,aAAa,CAAC,SAAS;AACxB,WAAK,cAAc;AACnB,WAAK,aAAa,QAAQ,KAAK,gBAAgB,aAAa;AAAA,IAChE;AACA,SAAK,sBAAsB,MAAM;AAC7B,UAAI,KAAK,aAAa;AAClB,aAAK,aAAa;AAClB,YAAI,EAAE,YAAY,IAAI;AACtB,kBAAU,MAAM;AACZ,YAAO,EAAc,cAAc,EAAE,SAAS,YAAY,iBAAiB,OAAO,YAAY,OAAO,SAAS,YAAY,QAAQ,GAAG,CAAC,YAAY,QAAQ,cAAc,aAAa;AACjL,iBAAK,cAAc,UAAU;AAC7B,iBAAK,UAAU,MAAM;AACrB,mBAAQ;AAAA,cAAc,SAAS;AAAA,cAAU,EAAE,OAAO,KAAK,sBAAsB;AAAA,cACzE,EAAc,iBAAiB,OAAO,OAAO,EAAE,cAA4B,SAAmB,GAAG,WAAW,CAAC;AAAA,YAAC;AAAA,UACtH,CAAC,GAAG,KAAK,EAAE;AAAA,QACf,CAAC;AAAA,MACL,WACS,KAAK,YAAY;AACtB,aAAK,aAAa;AAClB,UAAO,MAAM,KAAK,EAAE;AACpB,aAAK,cAAc,CAAC,CAAC;AACrB,aAAK,UAAU,EAAE;AAAA,MACrB;AAAA,IACJ;AACA,sBAAkB,EAAE;AACpB,SAAK,KAAK;AACV,SAAK,eAAe,IAAI,cAAc,KAAK,mBAAmB;AAC9D,QAAI,oBAAoB;AAAA,MACpB;AAAA,MACA,aAAa;AAAA,MACb,UAAU,KAAK;AAAA,MACf,QAAQ,KAAK;AAAA,IACjB,CAAC;AAAA,EACL;AAAA,EACA,SAAS;AACL,QAAI,eAAe,KAAK;AACxB,QAAI,CAAC,cAAc;AACf,WAAK,cAAc;AAAA,IACvB,OACK;AACD,WAAK,yBAAyB;AAAA,IAClC;AACA,SAAK,aAAa,QAAQ;AAC1B,QAAI,cAAc;AACd,WAAK,WAAW;AAAA,IACpB;AAAA,EACJ;AAAA,EACA,UAAU;AACN,QAAI,KAAK,aAAa;AAClB,WAAK,cAAc;AACnB,WAAK,aAAa,QAAQ;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,aAAa;AACT,cAAU,MAAM;AACZ,YAAM,WAAW;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EACA,eAAe,MAAM;AACjB,SAAK,aAAa,MAAM,gBAAgB;AACxC,SAAK;AACL,SAAK,aAAa,OAAO,gBAAgB;AAAA,EAC7C;AAAA,EACA,iBAAiB;AACb,SAAK,aAAa,MAAM,gBAAgB;AAAA,EAC5C;AAAA,EACA,kBAAkB;AACd,SAAK,aAAa,OAAO,kBAAkB,IAAI;AAAA,EACnD;AAAA,EACA,aAAa,iBAAiB,oBAAoB;AAC9C,SAAK,mBAAmB,aAAa,iBAAiB,kBAAkB;AAAA,EAC5E;AAAA,EACA,cAAc,YAAY;AACtB,QAAI,CAAC,cAAc,YAAY,KAAK,iBAAiB,GAAG;AACpD,UAAI,EAAE,UAAU,IAAI,KAAK;AACzB,eAAS,aAAa,KAAK,mBAAmB;AAC1C,kBAAU,OAAO,SAAS;AAAA,MAC9B;AACA,eAAS,aAAa,YAAY;AAC9B,kBAAU,IAAI,SAAS;AAAA,MAC3B;AACA,WAAK,oBAAoB;AAAA,IAC7B;AAAA,EACJ;AAAA,EACA,UAAU,QAAQ;AACd,mBAAe,KAAK,IAAI,UAAU,MAAM;AAAA,EAC5C;AACJ;",
  "names": []
}
